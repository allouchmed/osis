openapi: 3.0.0
servers:
 - url: https://{environment}.osis.uclouvain.be/api/v1/auth/
   variables:
     environment:
       default: dev
       enum:
         - dev # Development server
         - qa # Staging server
         - test # Test server
 - url: https://osis.uclouvain.be/api/v1/auth/
   description: Production server
info:
  version: '1'
  title: Auth Service
  description: |-
    A set of API endpoints that allow you to get a token.
paths:
  /token:
    post:
      description: Return a token linked to the username. Only Admin can access to this endpoint
      operationId: token_create
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                  username:
                    type: string
                    description: The username which we want to get a token
                  force_user_creation:
                    type: boolean
                    description: If the username specified doesn't not exist, force creation of user
                    default: false
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                    token:
                      type: string
                      description: The token linked to the user
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - auth
components:
  securitySchemes:
    Token:
      type: apiKey
      in: header
      name: Authorization
      description: Enter your token in the format **Token &lt;token>**
  responses:
    Unauthorized:
      description: Unauthorized
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    BadRequest:
      description: Bad request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
  schemas:
    Error:
      type: object
      properties:
        code:
          type: string
        message:
          type: string
      required:
        - code
        - message
security:
  - Token: []
