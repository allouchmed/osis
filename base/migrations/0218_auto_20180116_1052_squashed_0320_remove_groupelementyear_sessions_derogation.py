# Generated by Django 2.2.5 on 2019-12-14 00:55

from decimal import Decimal

import ckeditor.fields
import django.core.validators
import django.db.models.manager
from django.db import migrations, models

import base.models.learning_unit_year


class Migration(migrations.Migration):

    replaces = [('base', '0218_auto_20180116_1052'), ('base', '0219_auto_20180116_1052'), ('base', '0220_remove_campus_code'), ('base', '0221_auto_20180123_1541'), ('base', '0222_auto_20180125_0923'), ('base', '0223_auto_20180129_1106'), ('base', '0224_auto_20180129_1308'), ('base', '0225_WARNING_INDEX_20180129_1413'), ('base', '0226_auto_20180202_1044'), ('base', '0227_auto_20180202_1545'), ('base', '0228_titles_fields_renaming'), ('base', '0229_auto_20180205_1048'), ('base', '0230_auto_20180205_1031'), ('base', '0231_auto_20180207_0918'), ('base', '0232_auto_20180220_1527'), ('base', '0233_auto_20180222_1502'), ('base', '0234_auto_20180222_1649'), ('base', '0235_auto_20180226_0857'), ('base', '0236_auto_20180312_1035'), ('base', '0237_learningunityear_summary_editable'), ('base', '0238_auto_20180307_1338'), ('base', '0239_message_template_proposal_cancel'), ('base', '0240_auto_20180316_1041'), ('base', '0241_remove_proposallearningunit_learning_unit_year'), ('base', '0242_proposallearningunit_learning_unit_year'), ('base', '0243_auto_20180316_1034'), ('base', '0244_auto_20180316_1908'), ('base', '0245_auto_20180321_1107'), ('base', '0246_auto_20180326_1031'), ('base', '0247_auto_20180328_0944'), ('base', '0248_auto_20180328_1347'), ('base', '0249_auto_20180327_1458'), ('base', '0250_auto_20180327_1513'), ('base', '0251_auto_20180330_1716'), ('base', '0252_auto_20180403_1028'), ('base', '0253_message_template_proposal_consolidate'), ('base', '0254_auto_20180416_0817'), ('base', '0255_auto_20180416_0929'), ('base', '0256_auto_20180416_1024'), ('base', '0257_remove_groupelementyear_absolute_credits'), ('base', '0258_auto_20180416_1300'), ('base', '0259_auto_20180416_1404'), ('base', '0260_auto_20180416_1839'), ('base', '0261_offerenrollment_education_group_year'), ('base', '0262_remove_educationgroupyear_credits'), ('base', '0263_fix_message_consolidation_cancellation_proposals'), ('base', '0264_auto_20180420_1014'), ('base', '0265_educationgroupyear_credits'), ('base', '0266_auto_20180425_1611'), ('base', '0267_auto_20180507_0828'), ('base', '0268_learningcomponentyear_cm_to_pm'), ('base', '0269_learningcomponentyear_tp_to_pp'), ('base', '0270_auto_20180514_1112'), ('base', '0271_auto_20180518_1316'), ('base', '0272_auto_20180524_0918'), ('base', '0273_auto_20180525_1153'), ('base', '0274_auto_20180528_1344'), ('base', '0275_auto_20180529_1456'), ('base', '0276_professional_integration'), ('base', '0277_auto_20180601_1458'), ('base', '0278_auto_20180601_1600'), ('base', '0279_auto_20180604_1600'), ('base', '0280_auto_20180606_0738'), ('base', '0281_auto_20180604_1441'), ('base', '0282_auto_20180606_1332'), ('base', '0283_learningunityear_existing_proposal_in_epc'), ('base', '0284_auto_20180608_1447'), ('base', '0285_auto_20180612_1157'), ('base', '0286_auto_20180615_1145'), ('base', '0287_auto_20180615_1340'), ('base', '0288_auto_20180618_1323'), ('base', '0289_auto_20180619_1435'), ('base', '0290_auto_20180619_0928'), ('base', '0291_auto_20180619_1616'), ('base', '0292_auto_20180621_0943'), ('base', '0293_auto_20180621_1446'), ('base', '0294_auto_20180625_1159'), ('base', '0295_auto_20180627_1417'), ('base', '0296_admissioncondition_admissionconditionline'), ('base', '0297_auto_20180629_1443'), ('base', '0298_unauthorizedrelationship'), ('base', '0299_remove_learningunityear_bibliography'), ('base', '0300_auto_20180703_0941'), ('base', '0301_auto_20180703_1611'), ('base', '0302_auto_20180704_1417'), ('base', '0303_auto_20180705_1040'), ('base', '0304_auto_20180705_1115'), ('base', '0305_auto_20180705_1407'), ('base', '0306_auto_20180709_1334'), ('base', '0307_auto_20180711_1117'), ('base', '0308_educationgrouptype_changed'), ('base', '0309_auto_20180717_1628'), ('base', '0310_auto_20180718_1539'), ('base', '0311_auto_20180719_1551'), ('base', '0312_educationgroupyear_languages'), ('base', '0313_remove_learningunityear_mobility_modality'), ('base', '0314_auto_20180723_1503'), ('base', '0315_auto_20180724_0823'), ('base', '0316_auto_20180725_1033'), ('base', '0317_auto_20180725_1229'), ('base', '0318_remove_educationgroupyear_fee_type'), ('base', '0319_auto_20180727_0837'), ('base', '0320_remove_groupelementyear_sessions_derogation')]

    dependencies = [
        ('reference', '0017_language_changed'),
        ('attribution', '0032_auto_20180327_1458'),
        ('base', '0217_auto_20180116_1046'),
    ]

    operations = [
        migrations.RemoveField(
            model_name='entitycomponentyear',
            name='deleted',
        ),
        migrations.RemoveField(
            model_name='entitycontaineryear',
            name='deleted',
        ),
        migrations.RemoveField(
            model_name='examenrollment',
            name='deleted',
        ),
        migrations.RemoveField(
            model_name='groupelementyear',
            name='deleted',
        ),
        migrations.RemoveField(
            model_name='learningclassyear',
            name='deleted',
        ),
        migrations.RemoveField(
            model_name='learningcontainer',
            name='deleted',
        ),
        migrations.RemoveField(
            model_name='learningcontaineryear',
            name='deleted',
        ),
        migrations.RemoveField(
            model_name='learningunit',
            name='deleted',
        ),
        migrations.RemoveField(
            model_name='learningunitcomponent',
            name='deleted',
        ),
        migrations.RemoveField(
            model_name='learningunitcomponentclass',
            name='deleted',
        ),
        migrations.RemoveField(
            model_name='learningunitenrollment',
            name='deleted',
        ),
        migrations.RemoveField(
            model_name='learningunityear',
            name='deleted',
        ),
        migrations.RemoveField(
            model_name='learningcomponentyear',
            name='deleted',
        ),
        migrations.RenameField(
            model_name='entitycomponentyear',
            old_name='deleted_new',
            new_name='deleted',
        ),
        migrations.RenameField(
            model_name='entitycontaineryear',
            old_name='deleted_new',
            new_name='deleted',
        ),
        migrations.RenameField(
            model_name='examenrollment',
            old_name='deleted_new',
            new_name='deleted',
        ),
        migrations.RenameField(
            model_name='groupelementyear',
            old_name='deleted_new',
            new_name='deleted',
        ),
        migrations.RenameField(
            model_name='learningclassyear',
            old_name='deleted_new',
            new_name='deleted',
        ),
        migrations.RenameField(
            model_name='learningcontainer',
            old_name='deleted_new',
            new_name='deleted',
        ),
        migrations.RenameField(
            model_name='learningcontaineryear',
            old_name='deleted_new',
            new_name='deleted',
        ),
        migrations.RenameField(
            model_name='learningunit',
            old_name='deleted_new',
            new_name='deleted',
        ),
        migrations.RenameField(
            model_name='learningunitcomponent',
            old_name='deleted_new',
            new_name='deleted',
        ),
        migrations.RenameField(
            model_name='learningunitcomponentclass',
            old_name='deleted_new',
            new_name='deleted',
        ),
        migrations.RenameField(
            model_name='learningunitenrollment',
            old_name='deleted_new',
            new_name='deleted',
        ),
        migrations.RenameField(
            model_name='learningunityear',
            old_name='deleted_new',
            new_name='deleted',
        ),
        migrations.RenameField(
            model_name='learningcomponentyear',
            old_name='deleted_new',
            new_name='deleted',
        ),
        migrations.RemoveField(
            model_name='campus',
            name='code',
        ),
        migrations.AlterField(
            model_name='learningunityear',
            name='credits',
            field=models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True, validators=[django.core.validators.MinValueValidator(Decimal('0'))]),
        ),
        migrations.AlterModelOptions(
            name='learningunit',
            options={'permissions': (('can_access_learningunit', 'Can access learning unit'), ('can_edit_learningunit_date', 'Can edit learning unit date'), ('can_edit_learningunit_pedagogy', 'Can edit learning unit pedagogy'), ('can_edit_learningunit_specification', 'Can edit learning unit specification'), ('can_delete_learningunit', 'Can delete learning unit'), ('can_propose_learningunit', 'Can propose learning unit '), ('can_create_learningunit', 'Can create learning unit'))},
        ),
        migrations.AlterUniqueTogether(
            name='learningunityear',
            unique_together={('learning_unit', 'academic_year', 'deleted')},
        ),
        migrations.AlterUniqueTogether(
            name='entitycomponentyear',
            unique_together={('entity_container_year', 'learning_component_year', 'deleted')},
        ),
        migrations.AlterUniqueTogether(
            name='entitycontaineryear',
            unique_together={('entity', 'learning_container_year', 'type', 'deleted')},
        ),
        migrations.AlterUniqueTogether(
            name='learningcontaineryear',
            unique_together={('learning_container', 'academic_year', 'deleted')},
        ),
        migrations.RunSQL(
            sql="CREATE UNIQUE INDEX learningcontaineryear_learningcontainerid_academicyearid_deleted\n                    ON base_learningcontaineryear\n                (learning_container_id, academic_year_id, coalesce(deleted,'2000-01-01'));",
            reverse_sql='DROP INDEX learningcontaineryear_learningcontainerid_academicyearid_deleted',
        ),
        migrations.RunSQL(
            sql="CREATE UNIQUE INDEX learningunityear_learningunitid_academicyearid_deleted\n                    ON base_learningunityear\n                (learning_unit_id, academic_year_id, coalesce(deleted,'2000-01-01'));",
            reverse_sql='DROP INDEX learningunityear_learningunitid_academicyearid_deleted',
        ),
        migrations.RunSQL(
            sql="CREATE UNIQUE INDEX entitycontaineryear_entityid_learningcontaineryearid_type_deleted\n                    ON base_entitycontaineryear\n                (entity_id, learning_container_year_id,type, coalesce(deleted,'2000-01-01'));",
            reverse_sql='DROP INDEX entitycontaineryear_entityid_learningcontaineryearid_type_deleted',
        ),
        migrations.RunSQL(
            sql="CREATE UNIQUE INDEX entitycomponentyear_entitycontaineryear_learningcomponentyearid_deleted\n                    ON base_entitycomponentyear\n                (entity_container_year_id, learning_component_year_id, coalesce(deleted,'2000-01-01'));",
            reverse_sql='DROP INDEX entitycomponentyear_entitycontaineryear_learningcomponentyearid_deleted',
        ),
        migrations.AlterField(
            model_name='learningunityear',
            name='credits',
            field=models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True, validators=[django.core.validators.MinValueValidator(0.0), django.core.validators.MaxValueValidator(500)]),
        ),
        migrations.RenameField(
            model_name='entitycomponentyear',
            old_name='hourly_volume_partial',
            new_name='repartition_volume',
        ),
        migrations.RemoveField(
            model_name='entitycomponentyear',
            name='hourly_volume_total',
        ),
        migrations.RenameField(
            model_name='learningcontaineryear',
            old_name='title',
            new_name='common_title',
        ),
        migrations.RenameField(
            model_name='learningcontaineryear',
            old_name='title_english',
            new_name='common_title_english',
        ),
        migrations.RenameField(
            model_name='learningunityear',
            old_name='title_english',
            new_name='specific_title_english',
        ),
        migrations.RenameField(
            model_name='learningunityear',
            old_name='title',
            new_name='specific_title',
        ),
        migrations.AlterField(
            model_name='learningunityear',
            name='specific_title',
            field=models.CharField(blank=True, max_length=255, null=True),
        ),
        migrations.AlterModelOptions(
            name='learningunit',
            options={'permissions': (('can_access_learningunit', 'Can access learning unit'), ('can_edit_learningunit_date', 'Can edit learning unit date'), ('can_edit_learningunit', 'Can edit learning unit'), ('can_edit_learningunit_pedagogy', 'Can edit learning unit pedagogy'), ('can_edit_learningunit_specification', 'Can edit learning unit specification'), ('can_delete_learningunit', 'Can delete learning unit'), ('can_propose_learningunit', 'Can propose learning unit '), ('can_create_learningunit', 'Can create learning unit'))},
        ),
        migrations.AlterField(
            model_name='learningunityear',
            name='subtype',
            field=models.CharField(choices=[('FULL', 'FULL'), ('PARTIM', 'PARTIM')], default='', max_length=50),
            preserve_default=False,
        ),
        migrations.AlterField(
            model_name='personaddress',
            name='city',
            field=models.CharField(blank=True, max_length=255, null=True),
        ),
        migrations.AlterField(
            model_name='personaddress',
            name='country',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='reference.Country'),
        ),
        migrations.AlterField(
            model_name='personaddress',
            name='label',
            field=models.CharField(choices=[('RESIDENTIAL', 'RESIDENTIAL'), ('PROFESSIONAL', 'PROFESSIONAL')], default='PROFESSIONAL', max_length=20),
        ),
        migrations.AlterField(
            model_name='personaddress',
            name='location',
            field=models.CharField(blank=True, max_length=255, null=True),
        ),
        migrations.AlterField(
            model_name='personaddress',
            name='postal_code',
            field=models.CharField(blank=True, max_length=20, null=True),
        ),
        migrations.AlterModelOptions(
            name='proposallearningunit',
            options={'permissions': (('can_edit_learning_unit_proposal', 'Can edit learning unit proposal'),)},
        ),
        migrations.AlterField(
            model_name='proposallearningunit',
            name='state',
            field=models.CharField(choices=[('FACULTY', 'FACULTY'), ('CENTRAL', 'CENTRAL'), ('SUSPENDED', 'SUSPENDED'), ('ACCEPTED', 'ACCEPTED'), ('REFUSED', 'REFUSED')], max_length=50, verbose_name='state'),
        ),
        migrations.AddField(
            model_name='learningcomponentyear',
            name='changed',
            field=models.DateTimeField(auto_now=True, null=True),
        ),
        migrations.AddField(
            model_name='learningunitcomponent',
            name='changed',
            field=models.DateTimeField(auto_now=True, null=True),
        ),
        migrations.AlterField(
            model_name='proposallearningunit',
            name='state',
            field=models.CharField(choices=[('FACULTY', 'FACULTY'), ('CENTRAL', 'CENTRAL'), ('SUSPENDED', 'SUSPENDED'), ('ACCEPTED', 'ACCEPTED'), ('REFUSED', 'REFUSED')], default='FACULTY', max_length=50, verbose_name='state'),
        ),
        migrations.AlterField(
            model_name='learningcontaineryear',
            name='common_title',
            field=models.CharField(blank=True, max_length=255, null=True),
        ),
        migrations.AddField(
            model_name='learningunityear',
            name='summary_editable',
            field=models.BooleanField(default=True, verbose_name='summary_editable'),
        ),
        migrations.RunSQL(
            sql=[('INSERT INTO osis_common_messagetemplate (reference, subject, template, format, language) VALUES (%s, %s, %s, %s, %s);', ['learning_unit_proposal_canceled_html', 'Annulation de la mise en proposition', "{% autoescape off %}\r\n<p>Bonjour {{ first_name }} {{ last_name }},</p>\r\n<p>Ceci est un message automatique généré par le serveur OSIS – Merci de ne pas y répondre.</p>\r\n<p>Vous avez demandé l'annulation de la mise en proposition suivante :</p>\r\n<ul>{% for proposal in proposals %}<li>{{ proposal.learning_unit_year.acronym }} pour l'année {{ proposal.learning_unit_year.academic_year }}</li>{% endfor %}</ul><p>\r\nCordialement,\r\nOsis UCLouvain</p>\r\n{% endautoescape %}", 'HTML', 'fr-be'])],
        ),
        migrations.RunSQL(
            sql=[('INSERT INTO osis_common_messagetemplate (reference, subject, template, format, language) VALUES (%s, %s, %s, %s, %s);', ['learning_unit_proposal_canceled_txt', 'Annulation de la mise en proposition', "<p>Bonjour {{ first_name }} {{ last_name }},</p>\r\n<p>Ceci est un message automatique généré par le serveur OSIS – Merci de ne pas y répondre.</p>\r\n<p>Vous avez demandé l'annulation de la mise en proposition suivante :</p>\r\n<ul>{% for proposal in proposals %}<li>{{ proposal.learning_unit_year.acronym }} pour l'année {{ proposal.learning_unit_year.academic_year }}</li>{% endfor %}</ul><p>\r\nCordialement,\r\nOsis UCLouvain</p>\r\n", 'PLAIN', 'fr-be'])],
        ),
        migrations.RunSQL(
            sql=[('INSERT INTO osis_common_messagetemplate (reference, subject, template, format, language) VALUES (%s, %s, %s, %s, %s);', ['learning_unit_proposal_canceled_html', 'Cancellation of the proposal', '{% autoescape off %}\r\n<p>Hello {{ first_name }} {{ last_name }},</p>\r\n<p>This is an automatic message generated by the OSIS server – Please do not reply to this message.</p>\r\n<p>You asked for the cancellation of the proposal below :</p>\r\n<ul>{% for proposal in proposals %}<li>{{ proposal.learning_unit_year.acronym }} for the year {{ proposal.learning_unit_year.academic_year }}</li>{% endfor %}</ul><p>\r\nRegards,\r\nOsis UCLouvain</p>\r\n{% endautoescape off %}', 'HTML', 'en'])],
        ),
        migrations.RunSQL(
            sql=[('INSERT INTO osis_common_messagetemplate (reference, subject, template, format, language) VALUES (%s, %s, %s, %s, %s);', ['learning_unit_proposal_canceled_txt', 'Cancellation of the proposal', '<p>Hello {{ first_name }} {{ last_name }},</p>\r\n<p>This is an automatic message generated by the OSIS server – Please do not reply to this message.</p>\r\n<p>You asked for the cancellation of the proposal below  :</p>\r\n<ul>{% for proposal in proposals %}<li>{{ proposal.learning_unit_year.acronym }} for the year {{ proposal.learning_unit_year.academic_year }}</li>{% endfor %}</ul><p>\r\nRegards,\r\nOsis UCLouvain</p>\r\n', 'PLAIN', 'en'])],
        ),
        migrations.CreateModel(
            name='EntityCalendar',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('external_id', models.CharField(blank=True, max_length=100, null=True)),
                ('changed', models.DateTimeField(auto_now=True, null=True)),
                ('start_date', models.DateTimeField(blank=True, db_index=True, null=True)),
                ('end_date', models.DateTimeField(blank=True, db_index=True, null=True)),
                ('academic_calendar', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='base.AcademicCalendar')),
                ('entity', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='base.Entity')),
            ],
            options={
                'unique_together': {('academic_calendar', 'entity')},
            },
        ),
        migrations.RemoveField(
            model_name='proposallearningunit',
            name='learning_unit_year',
        ),
        migrations.RemoveField(
            model_name='proposallearningunit',
            name='folder',
        ),
        migrations.AddField(
            model_name='proposallearningunit',
            name='entity',
            field=models.ForeignKey(default=2, on_delete=django.db.models.deletion.CASCADE, to='base.Entity'),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='proposallearningunit',
            name='folder_id',
            field=models.PositiveIntegerField(),
        ),
        migrations.AddField(
            model_name='proposallearningunit',
            name='learning_unit_year',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='base.LearningUnitYear'),
        ),
        migrations.DeleteModel(
            name='ProposalFolder',
        ),
        migrations.AlterModelOptions(
            name='campus',
            options={'verbose_name_plural': 'campuses'},
        ),
        migrations.AlterField(
            model_name='campus',
            name='name',
            field=models.CharField(max_length=100),
        ),
        migrations.AlterField(
            model_name='proposallearningunit',
            name='state',
            field=models.CharField(choices=[('FACULTY', 'FACULTY'), ('CENTRAL', 'CENTRAL'), ('SUSPENDED', 'SUSPENDED'), ('ACCEPTED', 'ACCEPTED'), ('REFUSED', 'REFUSED')], default='FACULTY', max_length=50, verbose_name='state'),
        ),
        migrations.RemoveField(
            model_name='learningunityear',
            name='summary_editable',
        ),
        migrations.AddField(
            model_name='learningunityear',
            name='mobility_modality',
            field=models.CharField(blank=True, max_length=250, null=True, verbose_name='Modalities specific to IN and OUT mobility'),
        ),
        migrations.AddField(
            model_name='learningunityear',
            name='summary_locked',
            field=models.BooleanField(default=False, verbose_name='summary_locked'),
        ),
        migrations.CreateModel(
            name='Bibliography',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255, verbose_name='title')),
                ('mandatory', models.BooleanField(verbose_name='mandatory')),
                ('learning_unit_year', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='base.LearningUnitYear')),
            ],
            options={
                'verbose_name_plural': 'bibliographies',
            },
        ),
        migrations.RunSQL(
            sql='\n               DELETE FROM base_learningunitcomponent\n               WHERE deleted is not null OR\n                   id in (\n                       SELECT base_learningunitcomponent.id\n                       FROM base_learningunitcomponent\n                       JOIN base_learningcomponentyear on (base_learningcomponentyear.id = base_learningunitcomponent.learning_component_year_id)\n                       JOIN base_learningcontaineryear on (base_learningcontaineryear.id = base_learningcomponentyear.learning_container_year_id)\n                       JOIN base_learningcontainer on (base_learningcontainer.id = base_learningcontaineryear.learning_container_id)\n                       WHERE base_learningunitcomponent.deleted is null AND\n                           ( base_learningcomponentyear is not null OR base_learningcontaineryear.deleted is not null OR base_learningcontainer.deleted is not null )\n                   ) OR\n                   id in (\n                       SELECT base_learningunitcomponent.id\n                       FROM base_learningunitcomponent\n                       JOIN base_learningunityear on (base_learningunityear.id = base_learningunitcomponent.learning_unit_year_id)\n                       JOIN base_learningunit on (base_learningunit.id = base_learningunityear.learning_unit_id)\n                        WHERE base_learningunitcomponent.deleted is null AND\n                           ( base_learningunityear is not null OR base_learningunit.deleted is not null)\n                   )\n           ',
        ),
        migrations.RunSQL(
            sql='\n               DELETE FROM base_entitycomponentyear\n               WHERE deleted is not null OR\n                     id in (\n                       SELECT base_entitycomponentyear.id\n                       FROM base_entitycomponentyear\n                       JOIN base_entitycontaineryear on (base_entitycontaineryear.id = base_entitycomponentyear.entity_container_year_id)\n                       JOIN base_learningcontaineryear on (base_learningcontaineryear.id = base_entitycontaineryear.learning_container_year_id)\n                       JOIN base_learningcontainer on (base_learningcontainer.id = base_learningcontaineryear.learning_container_id)\n                       WHERE base_entitycomponentyear.deleted is null AND\n                       ( base_entitycontaineryear.deleted is not null OR base_learningcontaineryear.deleted is not null OR base_learningcontainer.deleted is not null )\n                     )\n           ',
        ),
        migrations.RunSQL(
            sql='\n               DELETE FROM base_entitycontaineryear\n               WHERE deleted is not null OR\n                     id in (\n                       SELECT base_entitycontaineryear.id\n                       FROM base_entitycontaineryear\n                       JOIN base_learningcontaineryear on (base_learningcontaineryear.id = base_entitycontaineryear.learning_container_year_id)\n                       JOIN base_learningcontainer on (base_learningcontainer.id = base_learningcontaineryear.learning_container_id)\n                       WHERE base_entitycontaineryear.deleted is null AND\n                       ( base_learningcontaineryear.deleted is not null OR base_learningcontainer.deleted is not null )\n                     )\n           ',
        ),
        migrations.RunSQL(
            sql='\n            DELETE FROM base_learningclassyear\n            WHERE deleted is not null OR\n                id in (\n                    SELECT base_learningclassyear.id\n                    FROM base_learningclassyear\n                    JOIN base_learningcomponentyear on (base_learningcomponentyear.id = base_learningclassyear.learning_component_year_id)\n                    JOIN base_learningcontaineryear on (base_learningcontaineryear.id = base_learningcomponentyear.learning_container_year_id)\n                    JOIN base_learningcontainer on (base_learningcontainer.id = base_learningcontaineryear.learning_container_id)\n                    WHERE base_learningclassyear.deleted is null AND\n                     ( base_learningcomponentyear.deleted is not null OR\n                       base_learningcontaineryear.deleted is not null OR\n                       base_learningcontainer.deleted is not null )\n                )\n        ',
        ),
        migrations.RunSQL(
            sql='\n               DELETE FROM base_learningcomponentyear\n               WHERE deleted is not null OR\n                     id in (\n                        SELECT base_learningcomponentyear.id\n                        FROM base_learningcomponentyear\n                        JOIN base_learningcontaineryear on (base_learningcontaineryear.id = base_learningcomponentyear.learning_container_year_id)\n                        JOIN base_learningcontainer on (base_learningcontainer.id = base_learningcontaineryear.learning_container_id)\n                        WHERE base_learningcomponentyear.deleted is null AND\n                         ( base_learningcontaineryear.deleted is not null OR base_learningcontainer.deleted is not null )\n                     )\n           ',
        ),
        migrations.RunSQL(
            sql='\n               DELETE FROM base_learningunityear\n               WHERE deleted is not null OR\n                     id in (\n                       SELECT base_learningunityear.id\n                       FROM base_learningunityear\n                       JOIN base_learningunit on (base_learningunit.id = base_learningunityear.learning_unit_id)\n                        WHERE base_learningunityear.deleted is null AND base_learningunit.deleted is not null\n                     )\n           ',
        ),
        migrations.RunSQL(
            sql='DELETE FROM base_learningunit WHERE deleted is not null',
        ),
        migrations.RunSQL(
            sql='\n               DELETE FROM base_learningcontaineryear\n               WHERE deleted is not null OR\n                     id in (\n                       SELECT base_learningcontaineryear.id\n                       FROM base_learningcontaineryear\n                       JOIN base_learningcontainer on (base_learningcontainer.id = base_learningcontaineryear.learning_container_id)\n                       WHERE base_learningcontaineryear.deleted is null AND base_learningcontainer.deleted is not null\n                     )\n           ',
        ),
        migrations.RunSQL(
            sql='DELETE FROM base_learningcontainer WHERE deleted is not null',
        ),
        migrations.RunSQL(
            sql='DROP INDEX IF EXISTS learningcontaineryear_learningcontainerid_academicyearid_deleted',
        ),
        migrations.RunSQL(
            sql='DROP INDEX IF EXISTS learningunityear_learningunitid_academicyearid_deleted',
        ),
        migrations.RunSQL(
            sql='DROP INDEX IF EXISTS entitycontaineryear_entityid_learningcontaineryearid_type_deleted',
        ),
        migrations.RunSQL(
            sql='DROP INDEX IF EXISTS entitycomponentyear_entitycontaineryear_learningcomponentyearid_deleted',
        ),
        migrations.AlterUniqueTogether(
            name='learningunityear',
            unique_together={('learning_unit', 'academic_year')},
        ),
        migrations.AlterUniqueTogether(
            name='entitycomponentyear',
            unique_together={('entity_container_year', 'learning_component_year')},
        ),
        migrations.AlterUniqueTogether(
            name='entitycontaineryear',
            unique_together={('entity', 'learning_container_year', 'type')},
        ),
        migrations.AlterUniqueTogether(
            name='learningcontaineryear',
            unique_together={('learning_container', 'academic_year')},
        ),
        migrations.RemoveField(
            model_name='examenrollment',
            name='deleted',
        ),
        migrations.RemoveField(
            model_name='groupelementyear',
            name='deleted',
        ),
        migrations.RemoveField(
            model_name='learningclassyear',
            name='deleted',
        ),
        migrations.RemoveField(
            model_name='learningcomponentyear',
            name='deleted',
        ),
        migrations.RemoveField(
            model_name='learningcontainer',
            name='deleted',
        ),
        migrations.RemoveField(
            model_name='learningunit',
            name='deleted',
        ),
        migrations.RemoveField(
            model_name='learningunitcomponent',
            name='deleted',
        ),
        migrations.RemoveField(
            model_name='learningunitcomponentclass',
            name='deleted',
        ),
        migrations.RemoveField(
            model_name='learningunitenrollment',
            name='deleted',
        ),
        migrations.RemoveField(
            model_name='entitycomponentyear',
            name='deleted',
        ),
        migrations.RemoveField(
            model_name='entitycontaineryear',
            name='deleted',
        ),
        migrations.RemoveField(
            model_name='learningcontaineryear',
            name='deleted',
        ),
        migrations.RemoveField(
            model_name='learningunityear',
            name='deleted',
        ),
        migrations.AlterField(
            model_name='proposallearningunit',
            name='type',
            field=models.CharField(choices=[('CREATION', 'CREATION'), ('MODIFICATION', 'MODIFICATION'), ('TRANSFORMATION', 'TRANSFORMATION'), ('TRANSFORMATION_AND_MODIFICATION', 'TRANSFORMATION_AND_MODIFICATION'), ('SUPPRESSION', 'SUPPRESSION')], default='MODIFICATION', max_length=50, verbose_name='type'),
        ),
        migrations.AlterModelOptions(
            name='learningunit',
            options={'permissions': (('can_access_learningunit', 'Can access learning unit'), ('can_edit_learningunit_date', 'Can edit learning unit date'), ('can_edit_learningunit', 'Can edit learning unit'), ('can_edit_learningunit_pedagogy', 'Can edit learning unit pedagogy'), ('can_edit_learningunit_specification', 'Can edit learning unit specification'), ('can_delete_learningunit', 'Can delete learning unit'), ('can_propose_learningunit', 'Can propose learning unit '), ('can_create_learningunit', 'Can create learning unit'), ('can_consolidate_learningunit_proposal', 'Can consolidate learning unit proposal'))},
        ),
        migrations.RunSQL(
            sql=[('INSERT INTO osis_common_messagetemplate (reference, subject, template, format, language) VALUES (%s, %s, %s, %s, %s);', ['learning_unit_proposal_consolidated_html', 'Consolidation de la mise en proposition', "{% autoescape off %}\r\n<p>Bonjour {{ first_name }} {{ last_name }},</p>\r\n<p>Ceci est un message automatique généré par le serveur OSIS – Merci de ne pas y répondre.</p>\r\n<p>Vous avez demandé la consolidation de la mise en proposition suivante :</p>\r\n<ul>{% for proposal in proposals %}<li>{{ proposal.learning_unit_year.acronym }} pour l'année {{ proposal.learning_unit_year.academic_year }}</li>{% endfor %}</ul><p>\r\nCordialement,\r\nOsis UCLouvain</p>\r\n{% endautoescape %}", 'HTML', 'fr-be'])],
        ),
        migrations.RunSQL(
            sql=[('INSERT INTO osis_common_messagetemplate (reference, subject, template, format, language) VALUES (%s, %s, %s, %s, %s);', ['learning_unit_proposal_consolidated_txt', 'Consolidation de la mise en proposition', "<p>Bonjour {{ first_name }} {{ last_name }},</p>\r\n<p>Ceci est un message automatique généré par le serveur OSIS – Merci de ne pas y répondre.</p>\r\n<p>Vous avez demandé la consolidation de la mise en proposition suivante :</p>\r\n<ul>{% for proposal in proposals %}<li>{{ proposal.learning_unit_year.acronym }} pour l'année {{ proposal.learning_unit_year.academic_year }}</li>{% endfor %}</ul><p>\r\nCordialement,\r\nOsis UCLouvain</p>\r\n", 'PLAIN', 'fr-be'])],
        ),
        migrations.RunSQL(
            sql=[('INSERT INTO osis_common_messagetemplate (reference, subject, template, format, language) VALUES (%s, %s, %s, %s, %s);', ['learning_unit_proposal_consolidated_html', 'Consolidation of the proposal', '{% autoescape off %}\r\n<p>Hello {{ first_name }} {{ last_name }},</p>\r\n<p>This is an automatic message generated by the OSIS server – Please do not reply to this message.</p>\r\n<p>You asked for the consolidation of the proposal below :</p>\r\n<ul>{% for proposal in proposals %}<li>{{ proposal.learning_unit_year.acronym }} for the year {{ proposal.learning_unit_year.academic_year }}</li>{% endfor %}</ul><p>\r\nRegards,\r\nOsis UCLouvain</p>\r\n{% endautoescape off %}', 'HTML', 'en'])],
        ),
        migrations.RunSQL(
            sql=[('INSERT INTO osis_common_messagetemplate (reference, subject, template, format, language) VALUES (%s, %s, %s, %s, %s);', ['learning_unit_proposal_consolidated_txt', 'Consolidation of the proposal', '<p>Hello {{ first_name }} {{ last_name }},</p>\r\n<p>This is an automatic message generated by the OSIS server – Please do not reply to this message.</p>\r\n<p>You asked for the consolidation of proposal below  :</p>\r\n<ul>{% for proposal in proposals %}<li>{{ proposal.learning_unit_year.acronym }} for the year {{ proposal.learning_unit_year.academic_year }}</li>{% endfor %}</ul><p>\r\nRegards,\r\nOsis UCLouvain</p>\r\n', 'PLAIN', 'en'])],
        ),
        migrations.CreateModel(
            name='LearningAchievements',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order', models.PositiveIntegerField(db_index=True, editable=False)),
                ('code_name', models.CharField(max_length=100, verbose_name='code')),
                ('text', ckeditor.fields.RichTextField(null=True, verbose_name='text')),
                ('learning_unit_year', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='base.LearningUnitYear')),
                ('language', models.ForeignKey(default='', on_delete=django.db.models.deletion.CASCADE, to='reference.Language')),
                ('changed', models.DateTimeField(auto_now=True, null=True)),
                ('external_id', models.CharField(blank=True, max_length=100, null=True)),
            ],
            options={
                'unique_together': {('code_name', 'learning_unit_year', 'language')},
            },
        ),
        migrations.RemoveField(
            model_name='groupelementyear',
            name='absolute_credits',
        ),
        migrations.AlterField(
            model_name='learningcontaineryear',
            name='container_type',
            field=models.CharField(choices=[('COURSE', 'COURSE'), ('INTERNSHIP', 'INTERNSHIP'), ('DISSERTATION', 'DISSERTATION'), ('OTHER_COLLECTIVE', 'OTHER_COLLECTIVE'), ('OTHER_INDIVIDUAL', 'OTHER_INDIVIDUAL'), ('MASTER_THESIS', 'MASTER_THESIS'), ('EXTERNAL', 'EXTERNAL')], max_length=20),
        ),
        migrations.AlterField(
            model_name='learningcontaineryear',
            name='campus',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='base.Campus'),
        ),
        migrations.AlterField(
            model_name='learningcontaineryear',
            name='language',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='reference.Language'),
        ),
        migrations.RemoveField(
            model_name='learningunit',
            name='acronym',
        ),
        migrations.RemoveField(
            model_name='learningunit',
            name='title',
        ),
        migrations.AlterField(
            model_name='learningcontaineryear',
            name='common_title',
            field=models.CharField(blank=True, max_length=255, null=True, verbose_name='common_official_title'),
        ),
        migrations.AlterField(
            model_name='learningcontaineryear',
            name='common_title_english',
            field=models.CharField(blank=True, max_length=250, null=True, verbose_name='common_official_english_title'),
        ),
        migrations.AlterField(
            model_name='learningcontaineryear',
            name='container_type',
            field=models.CharField(choices=[('COURSE', 'COURSE'), ('INTERNSHIP', 'INTERNSHIP'), ('DISSERTATION', 'DISSERTATION'), ('OTHER_COLLECTIVE', 'OTHER_COLLECTIVE'), ('OTHER_INDIVIDUAL', 'OTHER_INDIVIDUAL'), ('MASTER_THESIS', 'MASTER_THESIS'), ('EXTERNAL', 'EXTERNAL')], max_length=20, verbose_name='type'),
        ),
        migrations.AlterField(
            model_name='learningcontaineryear',
            name='language',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='reference.Language', verbose_name='language'),
        ),
        migrations.AlterField(
            model_name='learningunit',
            name='faculty_remark',
            field=models.TextField(blank=True, null=True, verbose_name='faculty_remark'),
        ),
        migrations.AlterField(
            model_name='learningunit',
            name='other_remark',
            field=models.TextField(blank=True, null=True, verbose_name='other_remark'),
        ),
        migrations.AlterField(
            model_name='learningunit',
            name='periodicity',
            field=models.CharField(choices=[('ANNUAL', 'ANNUAL'), ('BIENNIAL_EVEN', 'BIENNIAL_EVEN'), ('BIENNIAL_ODD', 'BIENNIAL_ODD')], default='ANNUAL', max_length=20, verbose_name='periodicity'),
        ),
        migrations.AlterField(
            model_name='learningunityear',
            name='academic_year',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='base.AcademicYear', validators=[base.models.learning_unit_year.academic_year_validator], verbose_name='academic_year'),
        ),
        migrations.AlterField(
            model_name='learningunityear',
            name='acronym',
            field=models.CharField(db_index=True, max_length=15, validators=[django.core.validators.RegexValidator('^[BLMW][A-Z]{2,4}\\d{4}[A-Z0-9]{0,1}$')], verbose_name='code'),
        ),
        migrations.AlterField(
            model_name='learningunityear',
            name='internship_subtype',
            field=models.CharField(blank=True, choices=[('TEACHING_INTERNSHIP', 'TEACHING_INTERNSHIP'), ('CLINICAL_INTERNSHIP', 'CLINICAL_INTERNSHIP'), ('PROFESSIONAL_INTERNSHIP', 'PROFESSIONAL_INTERNSHIP'), ('RESEARCH_INTERNSHIP', 'RESEARCH_INTERNSHIP')], max_length=250, null=True, verbose_name='internship_subtype'),
        ),
        migrations.AlterField(
            model_name='learningunityear',
            name='quadrimester',
            field=models.CharField(blank=True, choices=[('Q1', 'Q1'), ('Q2', 'Q2'), ('Q1&2', 'Q1&2'), ('Q1|2', 'Q1|2'), ('Q3', 'Q3')], max_length=4, null=True, verbose_name='quadrimester'),
        ),
        migrations.AlterField(
            model_name='learningunityear',
            name='specific_title',
            field=models.CharField(blank=True, max_length=255, null=True, verbose_name='official_title_proper_to_UE'),
        ),
        migrations.AlterField(
            model_name='learningunityear',
            name='specific_title_english',
            field=models.CharField(blank=True, max_length=250, null=True, verbose_name='official_english_title_proper_to_UE'),
        ),
        migrations.AlterField(
            model_name='learningunityear',
            name='status',
            field=models.BooleanField(default=False, verbose_name='active_title'),
        ),
        migrations.AlterField(
            model_name='learningunityear',
            name='subtype',
            field=models.CharField(choices=[('FULL', 'FULL'), ('PARTIM', 'PARTIM')], default='FULL', max_length=50),
        ),
        migrations.AddField(
            model_name='offerenrollment',
            name='education_group_year',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='base.EducationGroupYear'),
        ),
        migrations.RemoveField(
            model_name='educationgroupyear',
            name='credits',
        ),
        migrations.RunSQL(
            sql=[('UPDATE osis_common_messagetemplate  SET template=%s WHERE reference=%s AND language=%s;', ['{% autoescape off %}\r\n<p>Bonjour {{ first_name }} {{ last_name }},</p>\r\n<p>Ceci est un message automatique généré par le serveur OSIS – Merci de ne pas y répondre.</p>\r\n<p>Vous avez demandé la consolidation de mises en proposition. Vous trouverez ci-joint le rapport détaillé.</p><p>\r\nCordialement,\r\nOsis UCLouvain</p>\r\n{% endautoescape %}', 'learning_unit_proposal_consolidated_html', 'fr-be'])],
        ),
        migrations.RunSQL(
            sql=[('UPDATE osis_common_messagetemplate  SET template=%s WHERE reference=%s AND language=%s;', ['<p>Bonjour {{ first_name }} {{ last_name }},</p>\r\n<p>Ceci est un message automatique généré par le serveur OSIS – Merci de ne pas y répondre.</p>\r\n<p>Vous avez demandé la consolidation de mises en proposition. Vous trouverez ci-joint le rapport détaillé.</p><p>\r\nCordialement,\r\nOsis UCLouvain</p>\r\n', 'learning_unit_proposal_consolidated_txt', 'fr-be'])],
        ),
        migrations.RunSQL(
            sql=[('UPDATE osis_common_messagetemplate  SET template=%s WHERE reference=%s AND language=%s;', ['{% autoescape off %}\r\n<p>Hello {{ first_name }} {{ last_name }},</p>\r\n<p>This is an automatic message generated by the OSIS server – Please do not reply to this message.</p>\r\n<p>You have requested consolidation of proposals. You will find attached the detailed report.</p><p>\r\nRegards,\r\nOsis UCLouvain</p>\r\n{% endautoescape off %}', 'learning_unit_proposal_consolidated_html', 'en'])],
        ),
        migrations.RunSQL(
            sql=[('UPDATE osis_common_messagetemplate  SET template=%s WHERE reference=%s AND language=%s;', ['<p>Hello {{ first_name }} {{ last_name }},</p>\r\n<p>This is an automatic message generated by the OSIS server – Please do not reply to this message.</p>\r\n<p>You have requested consolidation of proposals. You will find attached the detailed report.</p><p>\r\nRegards,\r\nOsis UCLouvain</p>\r\n', 'learning_unit_proposal_consolidated_txt', 'en'])],
        ),
        migrations.RunSQL(
            sql=[('UPDATE osis_common_messagetemplate  SET template=%s WHERE reference=%s AND language=%s;', ["{% autoescape off %}\r\n<p>Bonjour {{ first_name }} {{ last_name }},</p>\r\n<p>Ceci est un message automatique généré par le serveur OSIS – Merci de ne pas y répondre.</p>\r\n<p>Vous avez demandé l'annulation de mises en proposition. Vous trouverez ci-joint le rapport détaillé.</p><p>\r\nCordialement,\r\nOsis UCLouvain</p>\r\n{% endautoescape %}", 'learning_unit_proposal_canceled_html', 'fr-be'])],
        ),
        migrations.RunSQL(
            sql=[('UPDATE osis_common_messagetemplate  SET template=%s WHERE reference=%s AND language=%s;', ["<p>Bonjour {{ first_name }} {{ last_name }},</p>\r\n<p>Ceci est un message automatique généré par le serveur OSIS – Merci de ne pas y répondre.</p>\r\n<p>Vous avez demandé l'annulation de mises en proposition. Vous trouverez ci-joint le rapport détaillé.</p><p>\r\nCordialement,\r\nOsis UCLouvain</p>\r\n", 'learning_unit_proposal_canceled_txt', 'fr-be'])],
        ),
        migrations.RunSQL(
            sql=[('UPDATE osis_common_messagetemplate  SET template=%s WHERE reference=%s AND language=%s;', ['{% autoescape off %}\r\n<p>Hello {{ first_name }} {{ last_name }},</p>\r\n<p>This is an automatic message generated by the OSIS server – Please do not reply to this message.</p>\r\n<p>You have requested cancellation of proposals. You will find attached the detailed report.</p><p>\r\nRegards,\r\nOsis UCLouvain</p>\r\n{% endautoescape off %}', 'learning_unit_proposal_canceled_html', 'en'])],
        ),
        migrations.RunSQL(
            sql=[('UPDATE osis_common_messagetemplate  SET template=%s WHERE reference=%s AND language=%s;', ['<p>Hello {{ first_name }} {{ last_name }},</p>\r\n<p>This is an automatic message generated by the OSIS server – Please do not reply to this message.</p>\r\n<p>You have requested cancellation of proposals. You will find attached the detailed report.</p><p>\r\nRegards,\r\nOsis UCLouvain</p>\r\n', 'learning_unit_proposal_canceled_txt', 'en'])],
        ),
        migrations.RenameModel(
            old_name='LearningAchievements',
            new_name='LearningAchievement',
        ),
        migrations.AddField(
            model_name='educationgroupyear',
            name='credits',
            field=models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True),
        ),
        migrations.AlterField(
            model_name='learningcontaineryear',
            name='is_vacant',
            field=models.BooleanField(default=False, verbose_name='vacant'),
        ),
        migrations.AlterField(
            model_name='learningcontaineryear',
            name='team',
            field=models.BooleanField(default=False, verbose_name='team_management'),
        ),
        migrations.AlterField(
            model_name='learningcontaineryear',
            name='type_declaration_vacant',
            field=models.CharField(blank=True, choices=[('RESEVED_FOR_INTERNS', 'RESEVED_FOR_INTERNS'), ('OPEN_FOR_EXTERNS', 'OPEN_FOR_EXTERNS'), ('EXCEPTIONAL_PROCEDURE', 'EXCEPTIONAL_PROCEDURE'), ('VACANT_NOT_PUBLISH', 'VACANT_NOT_PUBLISH'), ('DO_NOT_ASSIGN', 'DO_NOT_ASSIGN')], max_length=100, null=True, verbose_name='type_declaration_vacant'),
        ),
        migrations.AlterField(
            model_name='learningunityear',
            name='attribution_procedure',
            field=models.CharField(blank=True, choices=[('INTERNAL_TEAM', 'INTERNAL_TEAM'), ('EXTERNAL', 'EXTERNAL')], max_length=20, null=True, verbose_name='procedure'),
        ),
        migrations.AlterField(
            model_name='learningunityear',
            name='credits',
            field=models.DecimalField(decimal_places=2, max_digits=5, null=True, validators=[django.core.validators.MinValueValidator(0.0), django.core.validators.MaxValueValidator(500)]),
        ),
        migrations.RunSQL(
            sql=["UPDATE base_learningcomponentyear SET acronym = replace(acronym, 'CM', 'PM')"],
        ),
        migrations.RunSQL(
            sql=["UPDATE base_learningcomponentyear SET acronym = replace(acronym, 'TP', 'PP')"],
        ),
        migrations.AlterUniqueTogether(
            name='entitycontaineryear',
            unique_together={('learning_container_year', 'type')},
        ),
        migrations.AlterModelOptions(
            name='educationgroup',
            options={'permissions': (('can_access_education_group', 'Can access education_group'), ('can_edit_educationgroup_pedagogy', 'Can edit education group pedagogy'))},
        ),
        migrations.AlterField(
            model_name='learningunityear',
            name='acronym',
            field=models.CharField(db_index=True, max_length=15, validators=[django.core.validators.RegexValidator('^[BLMWX][A-Z]{2,4}\\d{4}[A-Z0-9]{0,1}$')], verbose_name='code'),
        ),
        migrations.AddField(
            model_name='learningunityear',
            name='professional_integration',
            field=models.BooleanField(default=False, verbose_name='professional_integration'),
        ),
        migrations.AlterField(
            model_name='learningunit',
            name='end_year',
            field=models.IntegerField(blank=True, null=True, verbose_name='end_year_title'),
        ),
        migrations.AlterField(
            model_name='learningunit',
            name='start_year',
            field=models.IntegerField(verbose_name='start_year'),
        ),
        migrations.AlterField(
            model_name='learningcontaineryear',
            name='common_title',
            field=models.CharField(blank=True, max_length=255, null=True, verbose_name='common_title'),
        ),
        migrations.AlterField(
            model_name='learningcontaineryear',
            name='common_title_english',
            field=models.CharField(blank=True, max_length=250, null=True, verbose_name='common_english_title'),
        ),
        migrations.AlterField(
            model_name='learningunityear',
            name='specific_title',
            field=models.CharField(blank=True, max_length=255, null=True, verbose_name='title_proper_to_UE'),
        ),
        migrations.AlterField(
            model_name='learningunityear',
            name='specific_title_english',
            field=models.CharField(blank=True, max_length=250, null=True, verbose_name='english_title_proper_to_UE'),
        ),
        migrations.AlterField(
            model_name='learningunityear',
            name='learning_container_year',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='base.LearningContainerYear'),
        ),
        migrations.AlterModelManagers(
            name='learningunityear',
            managers=[
                ('objects_with_container', django.db.models.manager.Manager()),
            ],
        ),
        migrations.RemoveField(
            model_name='learningcontaineryear',
            name='language',
        ),
        migrations.AddField(
            model_name='learningunityear',
            name='language',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='reference.Language', verbose_name='language'),
        ),
        migrations.RenameField(
            model_name='learningcomponentyear',
            old_name='hourly_volume_partial',
            new_name='hourly_volume_partial_q1',
        ),
        migrations.RemoveField(
            model_name='learningcontaineryear',
            name='campus',
        ),
        migrations.AddField(
            model_name='learningunityear',
            name='campus',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='base.Campus'),
        ),
        migrations.RemoveField(
            model_name='learningcomponentyear',
            name='title',
        ),
        migrations.RemoveField(
            model_name='learningunitcomponent',
            name='duration',
        ),
        migrations.RemoveField(
            model_name='learningunit',
            name='periodicity',
        ),
        migrations.AddField(
            model_name='learningunityear',
            name='periodicity',
            field=models.CharField(choices=[('ANNUAL', 'ANNUAL'), ('BIENNIAL_EVEN', 'BIENNIAL_EVEN'), ('BIENNIAL_ODD', 'BIENNIAL_ODD')], default='ANNUAL', max_length=20, verbose_name='periodicity'),
        ),
        migrations.AlterField(
            model_name='learningcomponentyear',
            name='planned_classes',
            field=models.IntegerField(blank=True, default=1, null=True),
        ),
        migrations.AlterField(
            model_name='learningunityear',
            name='quadrimester',
            field=models.CharField(blank=True, choices=[('Q1', 'Q1'), ('Q2', 'Q2'), ('Q1 and Q2', 'Q1 and Q2'), ('Q1 or Q2', 'Q1 or Q2'), ('Q3', 'Q3')], max_length=9, null=True, verbose_name='quadrimester'),
        ),
        migrations.AlterField(
            model_name='learningunityear',
            name='session',
            field=models.CharField(blank=True, choices=[('1', '1'), ('2', '2'), ('3', '3'), ('12', '12'), ('13', '13'), ('23', '23'), ('123', '123'), ('P23', 'P23')], max_length=50, null=True, verbose_name='session_title'),
        ),
        migrations.AddField(
            model_name='learningunit',
            name='existing_proposal_in_epc',
            field=models.BooleanField(default=False),
        ),
        migrations.CreateModel(
            name='ExternalLearningUnitYear',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('external_id', models.CharField(blank=True, max_length=100, null=True)),
                ('changed', models.DateTimeField(auto_now=True, null=True)),
                ('external_acronym', models.CharField(blank=True, db_index=True, max_length=15, null=True, verbose_name='external_code')),
                ('external_credits', models.DecimalField(decimal_places=2, max_digits=5, validators=[django.core.validators.MinValueValidator(0.0), django.core.validators.MaxValueValidator(500)], verbose_name='local_credits')),
                ('url', models.URLField(blank=True, max_length=255, null=True, verbose_name='url of the learning unit')),
                ('requesting_entity', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='base.Entity', verbose_name='requesting_entity')),
                ('learning_unit_year', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='base.LearningUnitYear')),
                ('author', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='base.Person')),
                ('date', models.DateTimeField(auto_now=True)),
            ],
            options={
                'unique_together': {('learning_unit_year', 'external_acronym')},
                'permissions': (('can_access_externallearningunityear', 'Can access external learning unit year'),),
            },
        ),
        migrations.AlterField(
            model_name='learningunityear',
            name='credits',
            field=models.DecimalField(decimal_places=2, max_digits=5, null=True, validators=[django.core.validators.MinValueValidator(0.0), django.core.validators.MaxValueValidator(500)], verbose_name='credits'),
        ),
        migrations.AlterField(
            model_name='learningcomponentyear',
            name='hourly_volume_partial_q1',
            field=models.DecimalField(blank=True, decimal_places=2, max_digits=6, null=True, verbose_name='hourly volume partial q1'),
        ),
        migrations.AddField(
            model_name='learningcomponentyear',
            name='hourly_volume_partial_q2',
            field=models.DecimalField(blank=True, decimal_places=2, max_digits=6, null=True, verbose_name='hourly volume partial q2'),
        ),
        migrations.AddField(
            model_name='learningcomponentyear',
            name='hourly_volume_total_annual',
            field=models.DecimalField(blank=True, decimal_places=2, max_digits=6, null=True, verbose_name='hourly volume total annual'),
        ),
        migrations.AlterField(
            model_name='learningcomponentyear',
            name='volume_declared_vacant',
            field=models.DecimalField(blank=True, decimal_places=1, max_digits=6, null=True, verbose_name='volume declared vacant'),
        ),
        migrations.AlterField(
            model_name='educationgroupyear',
            name='academic_year',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='base.AcademicYear', verbose_name='validity'),
        ),
        migrations.AlterField(
            model_name='educationgroupyear',
            name='acronym',
            field=models.CharField(db_index=True, max_length=40, verbose_name='acronym'),
        ),
        migrations.AlterField(
            model_name='educationgroupyear',
            name='credits',
            field=models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True, verbose_name='credits'),
        ),
        migrations.AlterField(
            model_name='educationgroupyear',
            name='education_group_type',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='base.EducationGroupType', verbose_name='training_type'),
        ),
        migrations.AlterField(
            model_name='educationgroupyear',
            name='enrollment_campus',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='enrollment', to='base.Campus', verbose_name='enrollment_campus'),
        ),
        migrations.AlterField(
            model_name='educationgroupyear',
            name='main_teaching_campus',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='teaching', to='base.Campus', verbose_name='learning_location'),
        ),
        migrations.AlterField(
            model_name='educationgroupyear',
            name='partial_acronym',
            field=models.CharField(db_index=True, max_length=15, null=True, verbose_name='code'),
        ),
        migrations.AlterField(
            model_name='educationgroupyear',
            name='remark',
            field=models.TextField(blank=True, null=True, verbose_name='remark'),
        ),
        migrations.AlterField(
            model_name='educationgroupyear',
            name='remark_english',
            field=models.TextField(blank=True, null=True, verbose_name='remark_english'),
        ),
        migrations.AlterField(
            model_name='educationgroupyear',
            name='title',
            field=models.CharField(max_length=255, verbose_name='title_in_french'),
        ),
        migrations.AlterField(
            model_name='educationgroupyear',
            name='title_english',
            field=models.CharField(blank=True, max_length=240, null=True, verbose_name='title_in_english'),
        ),
        migrations.AddField(
            model_name='educationgroupyear',
            name='max_credits',
            field=models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True, verbose_name='maximum credits'),
        ),
        migrations.AddField(
            model_name='educationgroupyear',
            name='min_credits',
            field=models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True, verbose_name='minimum credits'),
        ),
        migrations.AlterField(
            model_name='learningunityear',
            name='mobility_modality',
            field=models.CharField(blank=True, max_length=250, null=True, verbose_name='Mobility'),
        ),
        migrations.AlterField(
            model_name='academiccalendar',
            name='reference',
            field=models.CharField(blank=True, choices=[('DELIBERATION', 'DELIBERATION'), ('DISSERTATION_SUBMISSION', 'DISSERTATION_SUBMISSION'), ('EXAM_ENROLLMENTS', 'EXAM_ENROLLMENTS'), ('SCORES_EXAM_DIFFUSION', 'SCORES_EXAM_DIFFUSION'), ('SCORES_EXAM_SUBMISSION', 'SCORES_EXAM_SUBMISSION'), ('TEACHING_CHARGE_APPLICATION', 'TEACHING_CHARGE_APPLICATION'), ('COURSE_ENROLLMENT', 'COURSE_ENROLLMENT'), ('SUMMARY_COURSE_SUBMISSION', 'SUMMARY_COURSE_SUBMISSION'), ('EDUCATION_GROUP_EDITION', 'EDUCATION_GROUP_EDITION')], max_length=50, null=True),
        ),
        migrations.RenameModel(
            old_name='Bibliography',
            new_name='TeachingMaterial',
        ),
        migrations.CreateModel(
            name='AdmissionCondition',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text_bachelor', models.TextField(default='')),
                ('text_alert_message', models.TextField(default='')),
                ('text_standard', models.TextField(default='')),
                ('text_free', models.TextField(default='')),
                ('text_university_bachelors', models.TextField(default='')),
                ('text_non_university_bachelors', models.TextField(default='')),
                ('text_holders_second_university_degree', models.TextField(default='')),
                ('text_holders_non_university_second_degree', models.TextField(default='')),
                ('text_adults_taking_up_university_training', models.TextField(default='')),
                ('text_personalized_access', models.TextField(default='')),
                ('text_admission_enrollment_procedures', models.TextField(default='')),
                ('text_bachelor_en', models.TextField(default='')),
                ('text_alert_message_en', models.TextField(default='')),
                ('text_standard_en', models.TextField(default='')),
                ('text_free_en', models.TextField(default='')),
                ('text_university_bachelors_en', models.TextField(default='')),
                ('text_non_university_bachelors_en', models.TextField(default='')),
                ('text_holders_second_university_degree_en', models.TextField(default='')),
                ('text_holders_non_university_second_degree_en', models.TextField(default='')),
                ('text_adults_taking_up_university_training_en', models.TextField(default='')),
                ('text_personalized_access_en', models.TextField(default='')),
                ('text_admission_enrollment_procedures_en', models.TextField(default='')),
                ('education_group_year', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='base.EducationGroupYear')),
            ],
        ),
        migrations.CreateModel(
            name='AdmissionConditionLine',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('section', models.CharField(max_length=32)),
                ('external_id', models.CharField(max_length=32, null=True)),
                ('diploma', models.TextField(default='')),
                ('conditions', models.TextField(default='')),
                ('access', models.TextField(default='')),
                ('remarks', models.TextField(default='')),
                ('diploma_en', models.TextField(default='')),
                ('conditions_en', models.TextField(default='')),
                ('access_en', models.TextField(default='')),
                ('remarks_en', models.TextField(default='')),
                ('admission_condition', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='base.AdmissionCondition')),
            ],
        ),
        migrations.AddField(
            model_name='educationgroupyear',
            name='administration_entity',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='administration_entity', to='base.Entity', verbose_name='administration_entity'),
        ),
        migrations.AddField(
            model_name='educationgroupyear',
            name='management_entity',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='management_entity', to='base.Entity', verbose_name='management_entity'),
        ),
        migrations.CreateModel(
            name='UnauthorizedRelationship',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('changed', models.DateTimeField(auto_now=True)),
                ('child_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='unauthorized_child_type', to='base.EducationGroupType')),
                ('parent_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='unauthorized_parent_type', to='base.EducationGroupType')),
            ],
        ),
        migrations.RunSQL(
            sql='DELETE FROM base_teachingmaterial;',
        ),
        migrations.AddField(
            model_name='teachingmaterial',
            name='order',
            field=models.PositiveIntegerField(db_index=True, default=0, editable=False),
            preserve_default=False,
        ),
        migrations.AlterModelOptions(
            name='teachingmaterial',
            options={'ordering': ('learning_unit_year', 'order'), 'verbose_name_plural': 'bibliographies'},
        ),
        migrations.AlterField(
            model_name='educationgroup',
            name='end_year',
            field=models.IntegerField(blank=True, null=True, verbose_name='end'),
        ),
        migrations.AlterField(
            model_name='educationgroup',
            name='start_year',
            field=models.IntegerField(blank=True, null=True, verbose_name='start'),
        ),
        migrations.AlterField(
            model_name='educationgrouptype',
            name='category',
            field=models.CharField(choices=[('TRAINING', 'TRAINING'), ('MINI_TRAINING', 'MINI_TRAINING'), ('GROUP', 'GROUP')], default='TRAINING', max_length=25, verbose_name='type'),
        ),
        migrations.AlterField(
            model_name='educationgrouptype',
            name='name',
            field=models.CharField(max_length=255, verbose_name='training_type'),
        ),
        migrations.AlterField(
            model_name='educationgroupyear',
            name='academic_type',
            field=models.CharField(blank=True, choices=[('NON_ACADEMIC', 'NON_ACADEMIC'), ('NON_ACADEMIC_CREF', 'NON_ACADEMIC_CREF'), ('ACADEMIC', 'ACADEMIC')], max_length=20, null=True, verbose_name='academic_type'),
        ),
        migrations.AlterField(
            model_name='educationgroupyear',
            name='active',
            field=models.CharField(choices=[('ACTIVE', 'ACTIVE'), ('INACTIVE', 'INACTIVE'), ('RE_REGISTRATION', 'RE_REGISTRATION')], default='ACTIVE', max_length=20, verbose_name='status'),
        ),
        migrations.AlterField(
            model_name='educationgroupyear',
            name='admission_exam',
            field=models.BooleanField(default=False, verbose_name='admission_exam'),
        ),
        migrations.AlterField(
            model_name='educationgroupyear',
            name='dissertation',
            field=models.BooleanField(default=False, verbose_name='dissertation'),
        ),
        migrations.AlterField(
            model_name='educationgroupyear',
            name='duration',
            field=models.IntegerField(blank=True, null=True, verbose_name='duration'),
        ),
        migrations.AlterField(
            model_name='educationgroupyear',
            name='duration_unit',
            field=models.CharField(blank=True, choices=[('QUADRIMESTER', 'QUADRIMESTER'), ('TRIMESTER', 'TRIMESTER'), ('MONTH', 'MONTH'), ('WEEK', 'WEEK'), ('DAY', 'DAY')], default='QUADRIMESTER', max_length=40, null=True),
        ),
        migrations.AlterField(
            model_name='educationgroupyear',
            name='enrollment_enabled',
            field=models.BooleanField(default=False, verbose_name='enrollment_enabled'),
        ),
        migrations.AlterField(
            model_name='educationgroupyear',
            name='funding',
            field=models.BooleanField(default=False, verbose_name='funding'),
        ),
        migrations.AlterField(
            model_name='educationgroupyear',
            name='funding_cud',
            field=models.BooleanField(default=False, verbose_name='funding_cud'),
        ),
        migrations.AlterField(
            model_name='educationgroupyear',
            name='funding_direction',
            field=models.CharField(blank=True, max_length=1, null=True, verbose_name='funding_direction'),
        ),
        migrations.AlterField(
            model_name='educationgroupyear',
            name='funding_direction_cud',
            field=models.CharField(blank=True, max_length=1, null=True, verbose_name='cud_funding_direction'),
        ),
        migrations.AlterField(
            model_name='educationgroupyear',
            name='internship',
            field=models.CharField(blank=True, choices=[('YES', 'YES'), ('NO', 'NO'), ('OPTIONAL', 'OPTIONAL')], max_length=20, null=True, verbose_name='internship'),
        ),
        migrations.AlterField(
            model_name='educationgroupyear',
            name='keywords',
            field=models.CharField(blank=True, max_length=320, null=True, verbose_name='keywords'),
        ),
        migrations.AlterField(
            model_name='educationgroupyear',
            name='other_campus_activities',
            field=models.CharField(blank=True, choices=[('YES', 'YES'), ('NO', 'NO'), ('OPTIONAL', 'OPTIONAL')], max_length=20, null=True, verbose_name='other_campus_activities'),
        ),
        migrations.AlterField(
            model_name='educationgroupyear',
            name='other_language_activities',
            field=models.CharField(blank=True, choices=[('YES', 'YES'), ('NO', 'NO'), ('OPTIONAL', 'OPTIONAL')], max_length=20, null=True, verbose_name='other_language_activities'),
        ),
        migrations.AlterField(
            model_name='educationgroupyear',
            name='partial_deliberation',
            field=models.BooleanField(default=False, verbose_name='partial_deliberation'),
        ),
        migrations.AlterField(
            model_name='educationgroupyear',
            name='primary_language',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='reference.Language', verbose_name='primary_language'),
        ),
        migrations.AlterField(
            model_name='educationgroupyear',
            name='schedule_type',
            field=models.CharField(choices=[('DAILY', 'DAILY'), ('SHIFTED', 'SHIFTED'), ('ADAPTED', 'ADAPTED')], default='DAILY', max_length=20, verbose_name='schedule_type'),
        ),
        migrations.AlterField(
            model_name='educationgroupyear',
            name='university_certificate',
            field=models.BooleanField(default=False, verbose_name='university_certificate'),
        ),
        migrations.CreateModel(
            name='EducationGroupYearDomain',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('external_id', models.CharField(blank=True, max_length=100, null=True)),
                ('changed', models.DateTimeField(auto_now=True, null=True)),
                ('domain', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='reference.Domain')),
                ('education_group_year', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='base.EducationGroupYear')),
            ],
        ),
        migrations.RemoveField(
            model_name='offeryeardomain',
            name='education_group_year',
        ),
        migrations.AddField(
            model_name='educationgroupyear',
            name='domains',
            field=models.ManyToManyField(related_name='education_group_years', through='base.EducationGroupYearDomain', to='reference.Domain'),
        ),
        migrations.CreateModel(
            name='AuthorizedRelationship',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('changed', models.DateTimeField(auto_now=True)),
                ('child_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='authorized_child_type', to='base.EducationGroupType')),
                ('parent_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='authorized_parent_type', to='base.EducationGroupType')),
            ],
        ),
        migrations.DeleteModel(
            name='UnauthorizedRelationship',
        ),
        migrations.AlterField(
            model_name='offeryeardomain',
            name='domain',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='reference.Domain'),
        ),
        migrations.AlterModelOptions(
            name='educationgroupyear',
            options={'verbose_name': 'education group year'},
        ),
        migrations.AlterField(
            model_name='groupelementyear',
            name='parent',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='parents', to='base.EducationGroupYear'),
        ),
        migrations.AlterField(
            model_name='offerenrollment',
            name='education_group_year',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='base.EducationGroupYear'),
        ),
        migrations.AlterField(
            model_name='educationgroupyear',
            name='duration_unit',
            field=models.CharField(blank=True, choices=[('QUADRIMESTER', 'QUADRIMESTER'), ('TRIMESTER', 'TRIMESTER'), ('MONTH', 'MONTH'), ('WEEK', 'WEEK'), ('DAY', 'DAY')], default='QUADRIMESTER', max_length=40, null=True, verbose_name='unit'),
        ),
        migrations.RunSQL(
            sql='DELETE FROM base_groupelementyear;',
        ),
        migrations.AlterModelOptions(
            name='groupelementyear',
            options={'ordering': ('order',)},
        ),
        migrations.RemoveField(
            model_name='groupelementyear',
            name='current_order',
        ),
        migrations.AddField(
            model_name='groupelementyear',
            name='order',
            field=models.PositiveIntegerField(db_index=True, default=0, editable=False),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='educationgrouptype',
            name='changed',
            field=models.DateTimeField(auto_now=True, null=True),
        ),
        migrations.AddField(
            model_name='educationgroupyear',
            name='default_learning_unit_enrollment',
            field=models.BooleanField(default=False, verbose_name='Default learning unit enrollment'),
        ),
        migrations.AddField(
            model_name='educationgroupyear',
            name='weighting',
            field=models.BooleanField(default=False, verbose_name='Weighting'),
        ),
        migrations.AlterField(
            model_name='educationgroupyear',
            name='education_group_type',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='base.EducationGroupType', verbose_name='training_type'),
        ),
        migrations.AlterField(
            model_name='groupelementyear',
            name='comment',
            field=models.TextField(blank=True, max_length=500, null=True, verbose_name='comment'),
        ),
        migrations.AlterField(
            model_name='groupelementyear',
            name='comment_english',
            field=models.TextField(blank=True, max_length=500, null=True, verbose_name='english comment'),
        ),
        migrations.AddField(
            model_name='educationgroupyear',
            name='languages',
            field=models.ManyToManyField(related_name='education_group_years', through='base.EducationGroupLanguage', to='reference.Language'),
        ),
        migrations.RemoveField(
            model_name='learningunityear',
            name='mobility_modality',
        ),
        migrations.AlterField(
            model_name='groupelementyear',
            name='block',
            field=models.CharField(blank=True, max_length=7, null=True, verbose_name='block'),
        ),
        migrations.AlterField(
            model_name='groupelementyear',
            name='is_mandatory',
            field=models.BooleanField(default=False, verbose_name='mandatory'),
        ),
        migrations.AlterField(
            model_name='groupelementyear',
            name='max_credits',
            field=models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True, verbose_name='max_credits'),
        ),
        migrations.AlterField(
            model_name='groupelementyear',
            name='min_credits',
            field=models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True, verbose_name='min_credits'),
        ),
        migrations.AlterField(
            model_name='groupelementyear',
            name='relative_credits',
            field=models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True, verbose_name='relative credits'),
        ),
        migrations.AddField(
            model_name='educationgroupyear',
            name='decree_category',
            field=models.CharField(blank=True, choices=[('FCONT', 'FCONT'), ('1BAS', '1BAS'), ('2BAS', '2BAS'), ('AESS', 'AESS'), ('DEC1', 'DEC1'), ('DEC2', 'DEC2'), ('DES', 'DES'), ('DEA', 'DEA'), ('DOC', 'DOC'), ('AES', 'AES'), ('AUTRE', 'AUTRE'), ('BAC', 'BAC'), ('AP2C', 'AP2C'), ('MA1', 'MA1'), ('MA2X', 'MA2X'), ('MA2D', 'MA2D'), ('MA2S', 'MA2S'), ('MA2A', 'MA2A'), ('MA2M', 'MA2M'), ('AS2C', 'AS2C'), ('MACO', 'MACO'), ('AESSB', 'AESSB'), ('CAPS', 'CAPS'), ('AS3C', 'AS3C'), ('FODO', 'FODO'), ('DOCB', 'DOCB'), ('CEMC', 'CEMC'), ('MED', 'MED'), ('VETE', 'VETE')], max_length=40, null=True, verbose_name='Decree category'),
        ),
        migrations.AddField(
            model_name='educationgroupyear',
            name='rate_code',
            field=models.CharField(blank=True, choices=[('NO_ADDITIONAL_FEES', 'NO_ADDITIONAL_FEES'), ('AESS_CAPAES', 'AESS_CAPAES'), ('MINERVAL_COMPLETE', 'MINERVAL_COMPLETE'), ('UNIVERSITY_CERTIFICATE', 'UNIVERSITY_CERTIFICATE'), ('ADVANCED_MASTER_IN_MEDICAL_SPECIALIZATION', 'ADVANCED_MASTER_IN_MEDICAL_SPECIALIZATION'), ('ACCESS_CONTEST', 'ACCESS_CONTEST'), ('UNIVERSITY_CERTIFICATE_30_CREDITS', 'UNIVERSITY_CERTIFICATE_30_CREDITS'), ('CERTIFICATE_MEDECINE_COMPETENCE', 'CERTIFICATE_MEDECINE_COMPETENCE')], max_length=50, null=True, verbose_name='Rate code'),
        ),
        migrations.RemoveField(
            model_name='educationgroupyear',
            name='domains',
        ),
        migrations.AddField(
            model_name='educationgroupyear',
            name='main_domain',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='reference.Domain', verbose_name='main domain'),
        ),
        migrations.AddField(
            model_name='educationgroupyear',
            name='secondary_domains',
            field=models.ManyToManyField(related_name='education_group_years', through='base.EducationGroupYearDomain', to='reference.Domain', verbose_name='secondary domains'),
        ),
        migrations.AlterField(
            model_name='groupelementyear',
            name='parent',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='base.EducationGroupYear'),
        ),
        migrations.RemoveField(
            model_name='educationgroupyear',
            name='fee_type',
        ),
        migrations.AddField(
            model_name='groupelementyear',
            name='link_type',
            field=models.CharField(blank=True, choices=[('REFERENCE', 'REFERENCE')], max_length=25, null=True, verbose_name='Link type'),
        ),
        migrations.AddField(
            model_name='groupelementyear',
            name='quadrimester_derogation',
            field=models.CharField(blank=True, choices=[('Q1', 'Q1'), ('Q2', 'Q2'), ('Q1 or Q2', 'Q1 or Q2'), ('Q3', 'Q3')], max_length=10, null=True, verbose_name='Quadrimester derogation'),
        ),
        migrations.RemoveField(
            model_name='groupelementyear',
            name='sessions_derogation',
        ),
    ]
