# -*- coding: utf-8 -*-
# Generated by Django 1.11.2 on 2019-01-31 18:36
from __future__ import unicode_literals

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):
    replaces = [
        ('base', '0001_initial'),
        ('base', '0002_auto_20160122_1023'),
        ('base', '0003_auto_20160122_1201'),
        ('base', '0004_auto_20160122_1431'),
        ('base', '0005_person_email'),
        ('base', '0006_examenrollmenthistory'),
        ('base', '0007_auto_20160209_1107'),
        ('base', '0008_auto_20160209_1659'),
        ('base', '0009_triggers_field_changed'),
        ('base', '0010_auto_20160210_2255'),
        ('base', '0011_offeryear_offer_parent'),
        ('base', '0012_triggers_field_changed'),
        ('base', '0014_auto_20160222_1124'),
        ('base', '0015_auto_20160223_0921')
    ]

    operations = [
        migrations.CreateModel(
            name='AcademicCalendar',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('external_id', models.CharField(blank=True, max_length=40, null=True)),
                ('event_type', models.CharField(choices=[
                    ('ACADEMIC_YEAR', 'Academic Year'),
                    ('DISSERTATIONS_SUBMISSION_SESS_1', 'Submission of academic dissertations - exam session 1'),
                    ('DISSERTATIONS_SUBMISSION_SESS_2', 'Submission of academic dissertations - exam session 2'),
                    ('DISSERTATIONS_SUBMISSION_SESS_3', 'Submission of academic dissertations - exam session 3'),
                    ('EXAM_SCORES_SUBMISSION_SESS_1', 'Submission of exam scores - exam session 1'),
                    ('EXAM_SCORES_SUBMISSION_SESS_2', 'Submission of exam scores - exam session 2'),
                    ('EXAM_SCORES_SUBMISSION_SESS_3', 'Submission of exam scores - exam session 3'),
                    ('DELIBERATIONS_SESS_1', 'Deliberations - exam session 1'),
                    ('DELIBERATIONS_SESS_2', 'Deliberations - exam session 2'),
                    ('DELIBERATIONS_SESS_3', 'Deliberations - exam session 3'),
                    ('EXAM_SCORES_DIFFUSION_SESS_1', 'Diffusion of exam scores - exam session 1'),
                    ('EXAM_SCORES_DIFFUSION_SESS_2', 'Diffusion of exam scores - exam session 2'),
                    ('EXAM_SCORES_DIFFUSION_SESS_3', 'Diffusion of exam scores - exam session 3'),
                    ('EXAM_ENROLLMENTS_SESS_1', 'Exam enrollments - exam session 1'),
                    ('EXAM_ENROLLMENTS_SESS_2', 'Exam enrollments - exam session 2'),
                    ('EXAM_ENROLLMENTS_SESS_3', 'Exam enrollments - exam session 3')
                ], max_length=50)),
                ('title', models.CharField(blank=True, max_length=50, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('start_date', models.DateField(blank=True, null=True)),
                ('end_date', models.DateField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='AcademicYear',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('external_id', models.CharField(blank=True, max_length=40, null=True)),
                ('year', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='Attribution',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('external_id', models.CharField(blank=True, max_length=40, null=True)),
                ('start_date', models.DateField(blank=True, null=True)),
                ('end_date', models.DateField(blank=True, null=True)),
                ('function',
                 models.CharField(blank=True, choices=[('COORDINATOR', 'Coordinator'), ('PROFESSOR', 'Professor')],
                                  default='UNKNOWN', max_length=15, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='ExamEnrollment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('external_id', models.CharField(blank=True, max_length=70, null=True)),
                ('score_draft', models.DecimalField(blank=True, decimal_places=2, max_digits=4, null=True,
                                                    validators=[django.core.validators.MaxValueValidator(20),
                                                                django.core.validators.MinValueValidator(0)])),
                ('score_reencoded', models.DecimalField(blank=True, decimal_places=2, max_digits=4, null=True,
                                                        validators=[django.core.validators.MaxValueValidator(20),
                                                                    django.core.validators.MinValueValidator(0)])),
                ('score_final', models.DecimalField(blank=True, decimal_places=2, max_digits=4, null=True,
                                                    validators=[django.core.validators.MaxValueValidator(20),
                                                                django.core.validators.MinValueValidator(0)])),
                ('justification_draft', models.CharField(blank=True,
                                                         choices=[('ABSENT', 'Absent'), ('CHEATING', 'Cheating'),
                                                                  ('ILL', 'Ill'),
                                                                  ('JUSTIFIED_ABSENCE', 'Justified absence'),
                                                                  ('SCORE_MISSING', 'Score missing')], max_length=20,
                                                         null=True)),
                ('justification_reencoded', models.CharField(blank=True,
                                                             choices=[('ABSENT', 'Absent'), ('CHEATING', 'Cheating'),
                                                                      ('ILL', 'Ill'),
                                                                      ('JUSTIFIED_ABSENCE', 'Justified absence'),
                                                                      ('SCORE_MISSING', 'Score missing')],
                                                             max_length=20, null=True)),
                ('justification_final', models.CharField(blank=True,
                                                         choices=[('ABSENT', 'Absent'), ('CHEATING', 'Cheating'),
                                                                  ('ILL', 'Ill'),
                                                                  ('JUSTIFIED_ABSENCE', 'Justified absence'),
                                                                  ('SCORE_MISSING', 'Score missing')], max_length=20,
                                                         null=True)),
                ('encoding_status',
                 models.CharField(blank=True, choices=[('SAVED', 'Saved'), ('SUBMITTED', 'Submitted')], max_length=9,
                                  null=True)),
            ],
        ),
        migrations.CreateModel(
            name='LearningUnit',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('external_id', models.CharField(blank=True, max_length=40, null=True)),
                ('acronym', models.CharField(max_length=10)),
                ('title', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True, null=True)),
                ('start_year', models.IntegerField()),
                ('end_year', models.IntegerField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='LearningUnitEnrollment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('external_id', models.CharField(blank=True, max_length=70, null=True)),
                ('date_enrollment', models.DateField()),
            ],
        ),
        migrations.CreateModel(
            name='LearningUnitYear',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('external_id', models.CharField(blank=True, max_length=40, null=True)),
                ('acronym', models.CharField(max_length=15)),
                ('title', models.CharField(max_length=255)),
                ('credits', models.DecimalField(blank=True, decimal_places=2, max_digits=4, null=True)),
                ('decimal_scores', models.BooleanField(default=False)),
                ('academic_year',
                 models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='base.AcademicYear')),
                ('learning_unit',
                 models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='base.LearningUnit')),
            ],
        ),
        migrations.CreateModel(
            name='Offer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('external_id', models.CharField(blank=True, max_length=40, null=True)),
                ('acronym', models.CharField(max_length=10)),
                ('title', models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='OfferEnrollment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('external_id', models.CharField(blank=True, max_length=50, null=True)),
                ('date_enrollment', models.DateField()),
            ],
        ),
        migrations.CreateModel(
            name='OfferYear',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('external_id', models.CharField(blank=True, max_length=40, null=True)),
                ('acronym', models.CharField(max_length=10)),
                ('title', models.CharField(max_length=255)),
                ('academic_year',
                 models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='base.AcademicYear')),
                ('offer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='base.Offer')),
            ],
        ),
        migrations.CreateModel(
            name='OfferYearCalendar',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('external_id', models.CharField(blank=True, max_length=40, null=True)),
                ('event_type', models.CharField(choices=[('ACADEMIC_YEAR', 'Academic Year'), (
                    'DISSERTATIONS_SUBMISSION_SESS_1', 'Submission of academic dissertations - exam session 1'), (
                                                             'DISSERTATIONS_SUBMISSION_SESS_2',
                                                             'Submission of academic dissertations - exam session 2'), (
                                                             'DISSERTATIONS_SUBMISSION_SESS_3',
                                                             'Submission of academic dissertations - exam session 3'), (
                                                             'EXAM_SCORES_SUBMISSION_SESS_1',
                                                             'Submission of exam scores - exam session 1'), (
                                                             'EXAM_SCORES_SUBMISSION_SESS_2',
                                                             'Submission of exam scores - exam session 2'), (
                                                             'EXAM_SCORES_SUBMISSION_SESS_3',
                                                             'Submission of exam scores - exam session 3'),
                                                         ('DELIBERATIONS_SESS_1', 'Deliberations - exam session 1'),
                                                         ('DELIBERATIONS_SESS_2', 'Deliberations - exam session 2'),
                                                         ('DELIBERATIONS_SESS_3', 'Deliberations - exam session 3'), (
                                                             'EXAM_SCORES_DIFFUSION_SESS_1',
                                                             'Diffusion of exam scores - exam session 1'), (
                                                             'EXAM_SCORES_DIFFUSION_SESS_2',
                                                             'Diffusion of exam scores - exam session 2'), (
                                                             'EXAM_SCORES_DIFFUSION_SESS_3',
                                                             'Diffusion of exam scores - exam session 3'), (
                                                             'EXAM_ENROLLMENTS_SESS_1',
                                                             'Exam enrollments - exam session 1'), (
                                                             'EXAM_ENROLLMENTS_SESS_2',
                                                             'Exam enrollments - exam session 2'), (
                                                             'EXAM_ENROLLMENTS_SESS_3',
                                                             'Exam enrollments - exam session 3')], max_length=50)),
                ('start_date', models.DateField(blank=True, null=True)),
                ('end_date', models.DateField(blank=True, null=True)),
                ('academic_calendar',
                 models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='base.AcademicCalendar')),
                ('offer_year', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='base.OfferYear')),
            ],
        ),
        migrations.CreateModel(
            name='Person',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('external_id', models.CharField(blank=True, max_length=40, null=True)),
                ('global_id', models.CharField(blank=True, max_length=10, null=True)),
                ('gender',
                 models.CharField(blank=True, choices=[('F', 'Female'), ('M', 'Male'), ('U', 'Unknown')], default='U',
                                  max_length=1, null=True)),
                ('national_id', models.CharField(blank=True, max_length=25, null=True)),
                ('first_name', models.CharField(blank=True, max_length=50, null=True)),
                ('middle_name', models.CharField(blank=True, max_length=50, null=True)),
                ('last_name', models.CharField(blank=True, max_length=50, null=True)),
                ('user', models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE,
                                              to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='ProgrammeManager',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='SessionExam',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('external_id', models.CharField(blank=True, max_length=100, null=True)),
                ('number_session', models.IntegerField()),
                ('status',
                 models.CharField(choices=[('IDLE', 'Idle'), ('OPEN', 'Open'), ('CLOSED', 'Closed')], max_length=10)),
                ('learning_unit_year',
                 models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='base.LearningUnitYear')),
                ('offer_year_calendar',
                 models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='base.OfferYearCalendar')),
            ],
        ),
        migrations.CreateModel(
            name='Structure',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('external_id', models.CharField(blank=True, max_length=100, null=True)),
                ('acronym', models.CharField(max_length=15)),
                ('title', models.CharField(max_length=255)),
                ('part_of', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE,
                                              to='base.Structure')),
            ],
        ),
        migrations.CreateModel(
            name='Student',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('external_id', models.CharField(blank=True, max_length=100, null=True)),
                ('registration_id', models.CharField(max_length=10)),
                ('person', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='base.Person')),
            ],
        ),
        migrations.CreateModel(
            name='Tutor',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('external_id', models.CharField(blank=True, max_length=100, null=True)),
                ('person', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='base.Person')),
            ],
        ),
        migrations.AddField(
            model_name='programmemanager',
            name='faculty',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='base.Structure'),
        ),
        migrations.AddField(
            model_name='programmemanager',
            name='person',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='base.Person'),
        ),
        migrations.AddField(
            model_name='offeryear',
            name='structure',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='base.Structure'),
        ),
        migrations.AddField(
            model_name='offerenrollment',
            name='offer_year',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='base.OfferYear'),
        ),
        migrations.AddField(
            model_name='offerenrollment',
            name='student',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='base.Student'),
        ),
        migrations.AddField(
            model_name='learningunitenrollment',
            name='learning_unit_year',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='base.LearningUnitYear'),
        ),
        migrations.AddField(
            model_name='learningunitenrollment',
            name='offer_enrollment',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='base.OfferEnrollment'),
        ),
        migrations.AddField(
            model_name='examenrollment',
            name='learning_unit_enrollment',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='base.LearningUnitEnrollment'),
        ),
        migrations.AddField(
            model_name='examenrollment',
            name='session_exam',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='base.SessionExam'),
        ),
        migrations.AddField(
            model_name='attribution',
            name='learning_unit',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='base.LearningUnit'),
        ),
        migrations.AddField(
            model_name='attribution',
            name='tutor',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='base.Tutor'),
        ),
        migrations.AddField(
            model_name='academiccalendar',
            name='academic_year',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='base.AcademicYear'),
        ),
        migrations.AlterField(
            model_name='learningunityear',
            name='credits',
            field=models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True),
        ),
        migrations.AlterField(
            model_name='academiccalendar',
            name='external_id',
            field=models.CharField(blank=True, max_length=100, null=True),
        ),
        migrations.AlterField(
            model_name='academicyear',
            name='external_id',
            field=models.CharField(blank=True, max_length=100, null=True),
        ),
        migrations.AlterField(
            model_name='attribution',
            name='external_id',
            field=models.CharField(blank=True, max_length=100, null=True),
        ),
        migrations.AlterField(
            model_name='examenrollment',
            name='external_id',
            field=models.CharField(blank=True, max_length=100, null=True),
        ),
        migrations.AlterField(
            model_name='learningunit',
            name='acronym',
            field=models.CharField(max_length=15),
        ),
        migrations.AlterField(
            model_name='learningunit',
            name='external_id',
            field=models.CharField(blank=True, max_length=100, null=True),
        ),
        migrations.AlterField(
            model_name='learningunitenrollment',
            name='external_id',
            field=models.CharField(blank=True, max_length=100, null=True),
        ),
        migrations.AlterField(
            model_name='learningunityear',
            name='external_id',
            field=models.CharField(blank=True, max_length=100, null=True),
        ),
        migrations.AlterField(
            model_name='offer',
            name='acronym',
            field=models.CharField(max_length=15),
        ),
        migrations.AlterField(
            model_name='offer',
            name='external_id',
            field=models.CharField(blank=True, max_length=100, null=True),
        ),
        migrations.AlterField(
            model_name='offerenrollment',
            name='external_id',
            field=models.CharField(blank=True, max_length=100, null=True),
        ),
        migrations.AlterField(
            model_name='offeryear',
            name='acronym',
            field=models.CharField(max_length=15),
        ),
        migrations.AlterField(
            model_name='offeryear',
            name='external_id',
            field=models.CharField(blank=True, max_length=100, null=True),
        ),
        migrations.AlterField(
            model_name='offeryearcalendar',
            name='external_id',
            field=models.CharField(blank=True, max_length=100, null=True),
        ),
        migrations.AlterField(
            model_name='person',
            name='external_id',
            field=models.CharField(blank=True, max_length=100, null=True),
        ),
        migrations.CreateModel(
            name='Organization',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('external_id', models.CharField(blank=True, max_length=100, null=True)),
                ('name', models.CharField(max_length=255)),
                ('acronym', models.CharField(max_length=15)),
            ],
        ),
        migrations.AddField(
            model_name='structure',
            name='organization',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='base.Organization'),
        ),
        migrations.AddField(
            model_name='person',
            name='email',
            field=models.CharField(blank=True, max_length=255, null=True),
        ),
        migrations.CreateModel(
            name='ExamEnrollmentHistory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('score_final', models.DecimalField(decimal_places=2, max_digits=4, null=True)),
                ('justification_final', models.CharField(
                    choices=[('ABSENT', 'Absent'), ('CHEATING', 'Cheating'), ('ILL', 'Ill'),
                             ('JUSTIFIED_ABSENCE', 'Justified absence'), ('SCORE_MISSING', 'Score missing')],
                    max_length=20, null=True)),
                ('modification_date', models.DateTimeField(auto_now=True)),
                ('exam_enrollment',
                 models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='base.ExamEnrollment')),
                ('person', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='base.Person')),
            ],
        ),
        migrations.AlterField(
            model_name='person',
            name='email',
            field=models.EmailField(blank=True, max_length=255, null=True),
        ),
        migrations.AlterField(
            model_name='person',
            name='user',
            field=models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE,
                                       to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='academiccalendar',
            name='changed',
            field=models.DateTimeField(null=True),
        ),
        migrations.AddField(
            model_name='academicyear',
            name='changed',
            field=models.DateTimeField(null=True),
        ),
        migrations.AddField(
            model_name='attribution',
            name='changed',
            field=models.DateTimeField(null=True),
        ),
        migrations.AddField(
            model_name='examenrollment',
            name='changed',
            field=models.DateTimeField(null=True),
        ),
        migrations.AddField(
            model_name='learningunit',
            name='changed',
            field=models.DateTimeField(null=True),
        ),
        migrations.AddField(
            model_name='learningunitenrollment',
            name='changed',
            field=models.DateTimeField(null=True),
        ),
        migrations.AddField(
            model_name='learningunityear',
            name='changed',
            field=models.DateTimeField(null=True),
        ),
        migrations.AddField(
            model_name='offer',
            name='changed',
            field=models.DateTimeField(null=True),
        ),
        migrations.AddField(
            model_name='offerenrollment',
            name='changed',
            field=models.DateTimeField(null=True),
        ),
        migrations.AddField(
            model_name='offeryear',
            name='changed',
            field=models.DateTimeField(null=True),
        ),
        migrations.AddField(
            model_name='offeryearcalendar',
            name='changed',
            field=models.DateTimeField(null=True),
        ),
        migrations.AddField(
            model_name='organization',
            name='changed',
            field=models.DateTimeField(null=True),
        ),
        migrations.AddField(
            model_name='person',
            name='changed',
            field=models.DateTimeField(null=True),
        ),
        migrations.AddField(
            model_name='programmemanager',
            name='changed',
            field=models.DateTimeField(null=True),
        ),
        migrations.AddField(
            model_name='sessionexam',
            name='changed',
            field=models.DateTimeField(null=True),
        ),
        migrations.AddField(
            model_name='structure',
            name='changed',
            field=models.DateTimeField(null=True),
        ),
        migrations.AddField(
            model_name='student',
            name='changed',
            field=models.DateTimeField(null=True),
        ),
        migrations.AddField(
            model_name='tutor',
            name='changed',
            field=models.DateTimeField(null=True),
        ),
        migrations.AlterField(
            model_name='examenrollment',
            name='score_draft',
            field=models.DecimalField(blank=True, decimal_places=2, max_digits=4, null=True),
        ),
        migrations.AlterField(
            model_name='examenrollment',
            name='score_final',
            field=models.DecimalField(blank=True, decimal_places=2, max_digits=4, null=True),
        ),
        migrations.AlterField(
            model_name='examenrollment',
            name='score_reencoded',
            field=models.DecimalField(blank=True, decimal_places=2, max_digits=4, null=True),
        ),
        migrations.AddField(
            model_name='offeryear',
            name='parent',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE,
                                    related_name='children', to='base.OfferYear'),
        ),
        migrations.AddField(
            model_name='academiccalendar',
            name='highlight_description',
            field=models.CharField(blank=True, max_length=255, null=True),
        ),
        migrations.AddField(
            model_name='academiccalendar',
            name='highlight_shortcut',
            field=models.CharField(blank=True, max_length=255, null=True),
        ),
        migrations.AddField(
            model_name='academiccalendar',
            name='highlight_title',
            field=models.CharField(blank=True, max_length=255, null=True),
        ),
        migrations.AddField(
            model_name='offeryearcalendar',
            name='customized',
            field=models.BooleanField(default=False),
        ),
    ]
