# Generated by Django 2.2.5 on 2019-12-14 00:44

import uuid

import ckeditor.fields
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    replaces = [('base', '0016_auto_20160224_1039'), ('base', '0017_person_language'), ('base', '0018_auto_20160226_1138'), ('base', '0019_auto_20160303_0949'), ('base', '0020_auto_20160303_1043'), ('base', '0021_auto_20160306_2122'), ('base', '0022_auto_20160306_2249'), ('base', '0023_messagetemplate'), ('base', '0024_documentfile'), ('base', '0025_organization_type'), ('base', '0026_structure_type'), ('base', '0027_auto_20160406_1706'), ('base', '0028_auto_20160412_1219'), ('base', '0029_domain'), ('base', '0030_auto_20160413_1249'), ('base', '0031_applicationnotice'), ('base', '0032_auto_20160419_1612'), ('base', '0033_auto_20160421_1558'), ('base', '0034_auto_20160421_2039'), ('base', '0035_auto_20160421_2347'), ('base', '0036_auto_20160425_2040'), ('base', '0037_auto_20160427_1211'), ('base', '0038_auto_20160502_1559'), ('base', '0039_auto_20160502_0055'), ('base', '0040_scoresencoding'), ('base', '0041_messagehistory'), ('base', '0042_auto_20160506_1306'), ('base', '0043_auto_20160509_0748'), ('base', '0044_auto_20160511_2247')]

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('base', '0015_auto_20160223_0921'),
        ('reference', '0002_auto_20160414_1720'),
    ]

    operations = [
        migrations.AddField(
            model_name='organization',
            name='reference',
            field=models.CharField(blank=True, max_length=30, null=True),
        ),
        migrations.AddField(
            model_name='organization',
            name='website',
            field=models.URLField(blank=True, max_length=255, null=True),
        ),
        migrations.AddField(
            model_name='person',
            name='phone',
            field=models.CharField(blank=True, max_length=30, null=True),
        ),
        migrations.AddField(
            model_name='person',
            name='phone_mobile',
            field=models.CharField(blank=True, max_length=30, null=True),
        ),
        migrations.CreateModel(
            name='OrganizationAddress',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('label', models.CharField(max_length=20)),
                ('location', models.CharField(max_length=255)),
                ('postal_code', models.CharField(max_length=20)),
                ('city', models.CharField(max_length=255)),
                ('country', models.CharField(max_length=255)),
                ('organization', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='base.Organization')),
            ],
        ),
        migrations.RemoveField(
            model_name='academiccalendar',
            name='event_type',
        ),
        migrations.RemoveField(
            model_name='offeryearcalendar',
            name='event_type',
        ),
        migrations.AddField(
            model_name='academicyear',
            name='end_date',
            field=models.DateField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='academicyear',
            name='start_date',
            field=models.DateField(blank=True, null=True),
        ),
        migrations.RemoveField(
            model_name='programmemanager',
            name='faculty',
        ),
        migrations.AddField(
            model_name='programmemanager',
            name='offer_year',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='base.OfferYear'),
        ),
        migrations.AddField(
            model_name='offeryear',
            name='title_international',
            field=models.CharField(blank=True, max_length=255, null=True),
        ),
        migrations.AddField(
            model_name='offeryear',
            name='title_printable',
            field=models.CharField(blank=True, max_length=255, null=True),
        ),
        migrations.AddField(
            model_name='offeryear',
            name='title_short',
            field=models.CharField(blank=True, max_length=255, null=True),
        ),
        migrations.RemoveField(
            model_name='offer',
            name='acronym',
        ),
        migrations.CreateModel(
            name='DocumentFile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('content_type', models.CharField(choices=[('APPLICATION_CSV', 'application/csv'), ('APPLICATION_DOC', 'application/doc'), ('APPLICATION_PDF', 'application/pdf'), ('APPLICATION_XLS', 'application/xls'), ('APPLICATION_XLSX', 'application/xlsx'), ('APPLICATION_XML', 'application/xml'), ('APPLICATION_ZIP', 'application/zip'), ('IMAGE_JPEG', 'image/jpeg'), ('IMAGE_GIF', 'image/gif'), ('IMAGE_PNG', 'image/png'), ('TEXT_HTML', 'text/html'), ('TEXT_PLAIN', 'text/plain')], max_length=50)),
                ('creation_date', models.DateTimeField(auto_now=True)),
                ('storage_duration', models.IntegerField()),
                ('full_path', models.CharField(max_length=255)),
                ('physical_name', models.UUIDField(default=uuid.uuid4, editable=False)),
                ('physical_extension', models.CharField(max_length=10)),
                ('description', models.CharField(blank=True, max_length=255, null=True)),
                ('sub_directory', models.CharField(blank=True, max_length=100, null=True)),
                ('size', models.IntegerField(blank=True, null=True)),
                ('user', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='organization',
            name='type',
            field=models.CharField(blank=True, choices=[('MAIN', 'Main'), ('ACADEMIC_PARTNER', 'Academic partner'), ('INDUSTRIAL_PARTNER', 'Industrial partner'), ('SERVICE_PARTNER', 'Service partner'), ('COMMERCE_PARTNER', 'Commerce partner'), ('PUBLIC_PARTNER', 'Public partner')], default='UNKNOWN', max_length=30, null=True),
        ),
        migrations.AddField(
            model_name='structure',
            name='type',
            field=models.CharField(blank=True, choices=[('SECTOR', 'Sector'), ('FACULTY', 'Faculty'), ('INSTITUTE', 'Institute'), ('POLE', 'Pole')], max_length=30, null=True),
        ),
        migrations.AlterField(
            model_name='examenrollment',
            name='encoding_status',
            field=models.CharField(blank=True, choices=[('SAVED', 'saved'), ('SUBMITTED', 'submitted')], max_length=9, null=True),
        ),
        migrations.AlterField(
            model_name='examenrollment',
            name='justification_draft',
            field=models.CharField(blank=True, choices=[('ABSENT', 'absent'), ('CHEATING', 'cheating'), ('ILL', 'ill'), ('JUSTIFIED_ABSENCE', 'justified_absence'), ('SCORE_MISSING', 'score_missing')], max_length=20, null=True),
        ),
        migrations.AlterField(
            model_name='examenrollment',
            name='justification_final',
            field=models.CharField(blank=True, choices=[('ABSENT', 'absent'), ('CHEATING', 'cheating'), ('ILL', 'ill'), ('JUSTIFIED_ABSENCE', 'justified_absence'), ('SCORE_MISSING', 'score_missing')], max_length=20, null=True),
        ),
        migrations.AlterField(
            model_name='examenrollment',
            name='justification_reencoded',
            field=models.CharField(blank=True, choices=[('ABSENT', 'absent'), ('CHEATING', 'cheating'), ('ILL', 'ill'), ('JUSTIFIED_ABSENCE', 'justified_absence'), ('SCORE_MISSING', 'score_missing')], max_length=20, null=True),
        ),
        migrations.AlterField(
            model_name='examenrollmenthistory',
            name='justification_final',
            field=models.CharField(choices=[('ABSENT', 'absent'), ('CHEATING', 'cheating'), ('ILL', 'ill'), ('JUSTIFIED_ABSENCE', 'justified_absence'), ('SCORE_MISSING', 'score_missing')], max_length=20, null=True),
        ),
        migrations.AddField(
            model_name='offeryear',
            name='grade',
            field=models.CharField(blank=True, choices=[('BACHELOR', 'bachelor'), ('MASTER', 'master'), ('DOCTORATE', 'ph_d')], max_length=20, null=True),
        ),
        migrations.AlterField(
            model_name='person',
            name='gender',
            field=models.CharField(blank=True, choices=[('F', 'female'), ('M', 'male'), ('U', 'unknown')], default='U', max_length=1, null=True),
        ),
        migrations.AlterField(
            model_name='sessionexam',
            name='status',
            field=models.CharField(choices=[('IDLE', 'idle'), ('OPEN', 'open'), ('CLOSED', 'closed')], max_length=10),
        ),
        migrations.CreateModel(
            name='Domain',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('external_id', models.CharField(blank=True, max_length=100, null=True)),
                ('name', models.CharField(max_length=255)),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='base.Domain')),
            ],
        ),
        migrations.CreateModel(
            name='MessageTemplate',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reference', models.CharField(max_length=50, unique=True)),
                ('subject', models.CharField(max_length=255)),
                ('template', models.TextField()),
                ('format', models.CharField(choices=[('PLAIN', 'plain'), ('HTML', 'HTML'), ('PLAIN_HTML', 'plain_and_html')], max_length=15)),
                ('language', models.CharField(choices=[('fr-be', 'French'), ('en', 'English')], default='fr-be', max_length=30, null=True)),
            ],
        ),
        migrations.AddField(
            model_name='person',
            name='language',
            field=models.CharField(choices=[('fr-be', 'French'), ('en', 'English')], default='fr-be', max_length=30, null=True),
        ),
        migrations.CreateModel(
            name='ApplicationNotice',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('subject', models.CharField(max_length=255)),
                ('notice', models.TextField()),
                ('start_publish', models.DateTimeField()),
                ('stop_publish', models.DateTimeField()),
            ],
        ),
        migrations.CreateModel(
            name='StructureAddress',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('external_id', models.CharField(blank=True, max_length=100, null=True)),
                ('label', models.CharField(max_length=20)),
                ('location', models.CharField(max_length=255)),
                ('postal_code', models.CharField(max_length=20)),
                ('city', models.CharField(max_length=255)),
                ('phone', models.CharField(blank=True, max_length=30, null=True)),
                ('fax', models.CharField(blank=True, max_length=255, null=True)),
                ('email', models.EmailField(blank=True, max_length=255, null=True)),
                ('country', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='reference.Country')),
            ],
        ),
        migrations.CreateModel(
            name='PersonAddress',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('label', models.CharField(max_length=20)),
                ('location', models.CharField(max_length=255)),
                ('postal_code', models.CharField(max_length=20)),
                ('city', models.CharField(max_length=255)),
                ('country', models.CharField(max_length=255)),
                ('person', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='base.Person')),
                ('external_id', models.CharField(blank=True, max_length=100, null=True)),
            ],
        ),
        migrations.RunSQL(
            sql='delete from base_organizationaddress;',
        ),
        migrations.AlterField(
            model_name='organizationaddress',
            name='country',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='reference.Country'),
        ),
        migrations.RunSQL(
            sql='delete from base_personaddress;',
        ),
        migrations.AlterField(
            model_name='personaddress',
            name='country',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='reference.Country'),
        ),
        migrations.AlterField(
            model_name='personaddress',
            name='label',
            field=models.CharField(choices=[('RESIDENTIAL', 'residential'), ('PROFESSIONAL', 'professional')], max_length=20),
        ),
        migrations.AddField(
            model_name='structureaddress',
            name='structure',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='base.Structure'),
        ),
        migrations.RunSQL(
            sql='delete from base_programmemanager where offer_year_id is null;',
        ),
        migrations.RenameModel(
            old_name='ProgrammeManager',
            new_name='ProgramManager',
        ),
        migrations.AddField(
            model_name='programmanager',
            name='external_id',
            field=models.CharField(blank=True, max_length=100, null=True),
        ),
        migrations.AlterField(
            model_name='programmanager',
            name='offer_year',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='base.OfferYear'),
        ),
        migrations.AlterField(
            model_name='structure',
            name='type',
            field=models.CharField(blank=True, choices=[('SECTOR', 'sector'), ('FACULTY', 'faculty'), ('INSTITUTE', 'institute'), ('POLE', 'pole'), ('DOCTORAL_COMMISSION', 'doctoral_commission'), ('PROGRAM_COMMISSION', 'program_commission'), ('LOGISTIC', 'logistic'), ('UNDEFINED', 'undefined'), ('RESEARCH_CENTER', 'research_center'), ('TECHNOLOGIC_PLATFORM', 'technologic_platform')], max_length=30, null=True),
        ),
        migrations.AlterField(
            model_name='tutor',
            name='person',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='base.Person'),
        ),
        migrations.AlterField(
            model_name='academicyear',
            name='year',
            field=models.IntegerField(unique=True),
        ),
        migrations.AlterField(
            model_name='structure',
            name='type',
            field=models.CharField(blank=True, choices=[('SECTOR', 'sector'), ('FACULTY', 'faculty'), ('INSTITUTE', 'institute'), ('POLE', 'pole'), ('DOCTORAL_COMMISSION', 'doctoral_commission'), ('PROGRAM_COMMISSION', 'program_commission'), ('LOGISTIC', 'logistic'), ('RESEARCH_CENTER', 'research_center'), ('TECHNOLOGIC_PLATFORM', 'technologic_platform'), ('UNDEFINED', 'undefined')], max_length=30, null=True),
        ),
        migrations.AlterField(
            model_name='attribution',
            name='function',
            field=models.CharField(blank=True, choices=[('COORDINATOR', 'Coordinator'), ('PROFESSOR', 'Professor')], db_index=True, max_length=15, null=True),
        ),
        migrations.AlterField(
            model_name='learningunityear',
            name='acronym',
            field=models.CharField(db_index=True, max_length=15),
        ),
        migrations.AlterField(
            model_name='offeryear',
            name='acronym',
            field=models.CharField(db_index=True, max_length=15),
        ),
        migrations.AlterField(
            model_name='offeryearcalendar',
            name='end_date',
            field=models.DateField(blank=True, db_index=True, null=True),
        ),
        migrations.AlterField(
            model_name='offeryearcalendar',
            name='start_date',
            field=models.DateField(blank=True, db_index=True, null=True),
        ),
        migrations.AlterField(
            model_name='person',
            name='first_name',
            field=models.CharField(blank=True, db_index=True, max_length=50, null=True),
        ),
        migrations.AlterField(
            model_name='person',
            name='last_name',
            field=models.CharField(blank=True, db_index=True, max_length=50, null=True),
        ),
        migrations.AlterField(
            model_name='student',
            name='registration_id',
            field=models.CharField(max_length=10, unique=True),
        ),
        migrations.AlterField(
            model_name='messagetemplate',
            name='language',
            field=models.CharField(choices=[('fr-be', 'French'), ('en', 'English')], default='fr-be', max_length=30),
        ),
        migrations.AlterField(
            model_name='messagetemplate',
            name='reference',
            field=models.CharField(max_length=50),
        ),
        migrations.AlterField(
            model_name='messagetemplate',
            name='template',
            field=ckeditor.fields.RichTextField(),
        ),
        migrations.AlterUniqueTogether(
            name='messagetemplate',
            unique_together={('reference', 'language')},
        ),
        migrations.CreateModel(
            name='ScoresEncoding',
            fields=[
                ('id', models.BigIntegerField(primary_key=True, serialize=False)),
                ('total_exam_enrollments', models.IntegerField()),
                ('exam_enrollments_encoded', models.IntegerField()),
            ],
            options={
                'managed': False,
                'db_table': 'app_scores_encoding',
            },
        ),
        migrations.RunSQL(
            sql='\n            DROP VIEW IF EXISTS app_scores_encoding;\n\n            CREATE OR REPLACE VIEW app_scores_encoding AS\n            SELECT row_number() OVER () as id,\n\n                base_programmanager.id as program_manager_id,\n                program_manager_person.id as pgm_manager_person_id,\n                tutor_person.id as tutor_person_id,\n                base_offeryear.id as offer_year_id,\n                base_learningunityear.id as learning_unit_year_id,\n\n                count(base_examenrollment.id) as total_exam_enrollments,\n                sum(case when base_examenrollment.score_final is not null or base_examenrollment.justification_final is not null then 1 else 0 end) exam_enrollments_encoded\n\n\n            from base_person tutor_person\n            join base_tutor on tutor_person.id = base_tutor.person_id\n            join base_attribution on base_attribution.tutor_id = base_tutor.id\n            join base_learningunit on base_learningunit.id = base_attribution.learning_unit_id\n            join base_learningunityear on base_learningunityear.learning_unit_id = base_learningunit.id\n            join base_sessionexam on base_sessionexam.learning_unit_year_id = base_learningunityear.id\n            join base_examenrollment on base_sessionexam.id = base_examenrollment.session_exam_id\n            join base_offeryearcalendar on base_offeryearcalendar.id = base_sessionexam.offer_year_calendar_id\n            join base_offeryear on base_offeryear.id = base_offeryearcalendar.offer_year_id\n            join base_programmanager on base_programmanager.offer_year_id = base_offeryear.id\n            join base_person program_manager_person on program_manager_person.id = base_programmanager.person_id\n\n            where base_offeryearcalendar.start_date < CURRENT_TIMESTAMP\n            and base_offeryearcalendar.end_date >  CURRENT_TIMESTAMP\n\n            group by\n            base_programmanager.id,\n            program_manager_person.id,\n            tutor_person.id,\n            base_offeryear.id,\n            base_learningunityear.id\n            ;\n            ',
        ),
        migrations.CreateModel(
            name='MessageHistory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('subject', models.CharField(max_length=255)),
                ('content_html', models.TextField()),
                ('created', models.DateTimeField(editable=False)),
                ('sent', models.DateTimeField(null=True)),
                ('person', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='base.Person')),
                ('content_txt', models.TextField(default='')),
                ('reference', models.CharField(db_index=True, max_length=100, null=True)),
            ],
        ),
        migrations.AlterField(
            model_name='documentfile',
            name='creation_date',
            field=models.DateTimeField(auto_now_add=True),
        ),
        migrations.RemoveField(
            model_name='examenrollment',
            name='encoding_status',
        ),
        migrations.AlterField(
            model_name='examenrollment',
            name='justification_draft',
            field=models.CharField(blank=True, choices=[('ABSENCE_UNJUSTIFIED', 'absence_unjustified'), ('ABSENCE_JUSTIFIED', 'absence_justified'), ('CHEATING', 'cheating'), ('SCORE_MISSING', 'score_missing')], max_length=20, null=True),
        ),
        migrations.AlterField(
            model_name='examenrollment',
            name='justification_final',
            field=models.CharField(blank=True, choices=[('ABSENCE_UNJUSTIFIED', 'absence_unjustified'), ('ABSENCE_JUSTIFIED', 'absence_justified'), ('CHEATING', 'cheating'), ('SCORE_MISSING', 'score_missing')], max_length=20, null=True),
        ),
        migrations.AlterField(
            model_name='examenrollment',
            name='justification_reencoded',
            field=models.CharField(blank=True, choices=[('ABSENCE_UNJUSTIFIED', 'absence_unjustified'), ('ABSENCE_JUSTIFIED', 'absence_justified'), ('CHEATING', 'cheating'), ('SCORE_MISSING', 'score_missing')], max_length=20, null=True),
        ),
        migrations.AlterField(
            model_name='examenrollmenthistory',
            name='justification_final',
            field=models.CharField(choices=[('ABSENCE_UNJUSTIFIED', 'absence_unjustified'), ('ABSENCE_JUSTIFIED', 'absence_justified'), ('CHEATING', 'cheating'), ('SCORE_MISSING', 'score_missing')], max_length=20, null=True),
        ),
    ]
