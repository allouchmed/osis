# Generated by Django 2.2.5 on 2019-12-14 00:46

import uuid

import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    replaces = [('base', '0065_migration_to_osis_common'), ('base', '0066_person_source'), ('base', '0067_externaloffer'), ('base', '0068_auto_20160921_2201'), ('base', '0069_auto_20160831_1551'), ('base', '0070_scoresencoding'), ('base', '0071_add_learning_unit_year'), ('base', '0072_attribution_learning_unit'), ('base', '0073_auto_20161028_0922')]

    dependencies = [
        ('base', '0064_remove_uuid_null'),
        ('reference', '0009_auto_20160921_1139'),
    ]

    operations = [
        migrations.RemoveField(
            model_name='documentfile',
            name='user',
        ),
        migrations.RemoveField(
            model_name='messagehistory',
            name='person',
        ),
        migrations.DeleteModel(
            name='MessageTemplate',
        ),
        migrations.DeleteModel(
            name='DocumentFile',
        ),
        migrations.DeleteModel(
            name='MessageHistory',
        ),
        migrations.CreateModel(
            name='ExternalOffer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False, unique=True)),
                ('external_id', models.CharField(blank=True, max_length=100, null=True)),
                ('changed', models.DateTimeField(null=True)),
                ('name', models.CharField(max_length=150, unique=True)),
                ('adhoc', models.BooleanField(default=True)),
                ('national', models.BooleanField(default=False)),
                ('domain', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='reference.Domain')),
                ('grade_type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='reference.GradeType')),
                ('offer_year', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='base.OfferYear')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='person',
            name='birth_date',
            field=models.DateField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='person',
            name='source',
            field=models.CharField(blank=True, choices=[('BASE', 'BASE'), ('DISSERTATION', 'DISSERTATION')], default='BASE', max_length=25, null=True),
        ),
        migrations.AddField(
            model_name='examenrollment',
            name='enrollment_state',
            field=models.CharField(choices=[('ENROLLED', 'ENROLLED'), ('NOT_ENROLLED', 'NOT_ENROLLED')], default='ENROLLED', max_length=20),
        ),
        migrations.AlterField(
            model_name='examenrollment',
            name='justification_draft',
            field=models.CharField(blank=True, choices=[('ABSENCE_UNJUSTIFIED', 'ABSENCE_UNJUSTIFIED'), ('ABSENCE_JUSTIFIED', 'ABSENCE_JUSTIFIED'), ('CHEATING', 'CHEATING'), ('SCORE_MISSING', 'SCORE_MISSING')], max_length=20, null=True),
        ),
        migrations.AlterField(
            model_name='examenrollment',
            name='justification_final',
            field=models.CharField(blank=True, choices=[('ABSENCE_UNJUSTIFIED', 'ABSENCE_UNJUSTIFIED'), ('ABSENCE_JUSTIFIED', 'ABSENCE_JUSTIFIED'), ('CHEATING', 'CHEATING'), ('SCORE_MISSING', 'SCORE_MISSING')], max_length=20, null=True),
        ),
        migrations.AlterField(
            model_name='examenrollment',
            name='justification_reencoded',
            field=models.CharField(blank=True, choices=[('ABSENCE_UNJUSTIFIED', 'ABSENCE_UNJUSTIFIED'), ('ABSENCE_JUSTIFIED', 'ABSENCE_JUSTIFIED'), ('CHEATING', 'CHEATING'), ('SCORE_MISSING', 'SCORE_MISSING')], max_length=20, null=True),
        ),
        migrations.AlterField(
            model_name='examenrollmenthistory',
            name='justification_final',
            field=models.CharField(choices=[('ABSENCE_UNJUSTIFIED', 'ABSENCE_UNJUSTIFIED'), ('ABSENCE_JUSTIFIED', 'ABSENCE_JUSTIFIED'), ('CHEATING', 'CHEATING'), ('SCORE_MISSING', 'SCORE_MISSING')], max_length=20, null=True),
        ),
        migrations.RunSQL(
            sql='\n            DROP VIEW IF EXISTS app_scores_encoding;\n\n            CREATE OR REPLACE VIEW app_scores_encoding AS\n            SELECT row_number() OVER () as id,\n\n                base_programmanager.id as program_manager_id,\n                program_manager_person.id as pgm_manager_person_id,\n                base_offeryear.id as offer_year_id,\n                base_learningunityear.id as learning_unit_year_id,\n                base_examenrollment.enrollment_state,\n\n                count(base_examenrollment.id) as total_exam_enrollments,\n                sum(case when base_examenrollment.score_final is not null or base_examenrollment.justification_final is not null then 1 else 0 end) exam_enrollments_encoded\n\n\n            from base_examenrollment\n            join base_sessionexam on base_sessionexam.id = base_examenrollment.session_exam_id\n            join base_learningunityear on base_learningunityear.id = base_sessionexam.learning_unit_year_id\n\n            join base_offeryearcalendar on base_offeryearcalendar.id = base_sessionexam.offer_year_calendar_id\n\n            join base_learningunitenrollment on base_learningunitenrollment.id = base_examenrollment.learning_unit_enrollment_id\n            join base_offerenrollment on base_offerenrollment.id = base_learningunitenrollment.offer_enrollment_id\n            join base_offeryear on base_offeryear.id = base_offerenrollment.offer_year_id\n\n            join base_programmanager on base_programmanager.offer_year_id = base_offeryear.id\n            join base_person program_manager_person on program_manager_person.id = base_programmanager.person_id\n\n            where base_offeryearcalendar.start_date <= CURRENT_TIMESTAMP::date\n            and base_offeryearcalendar.end_date >=  CURRENT_TIMESTAMP::date\n\n            group by\n            base_programmanager.id,\n            program_manager_person.id,\n            base_offeryear.id,\n            base_learningunityear.id,\n            base_examenrollment.enrollment_state\n            ;\n            ',
        ),
        migrations.AddField(
            model_name='attribution',
            name='learning_unit_year',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='base.LearningUnitYear'),
        ),
        migrations.RemoveField(
            model_name='attribution',
            name='learning_unit',
        ),
        migrations.AddField(
            model_name='attribution',
            name='learning_unit',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='base.LearningUnit'),
        ),
        migrations.AlterField(
            model_name='academicyear',
            name='end_date',
            field=models.DateField(blank=True, default=django.utils.timezone.now, null=True),
        ),
        migrations.AlterField(
            model_name='academicyear',
            name='start_date',
            field=models.DateField(blank=True, default=django.utils.timezone.now, null=True),
        ),
    ]
